# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=(
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), 
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt((-0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), 
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), 
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt((0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0))), name='WebFaces')
#* Feature creation failed.
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
#* TypeError: mask[0]; found Face, expecting string
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
#* TypeError: mask[0]; found Face, expecting string
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
#* TypeError: mask[0]; found Face, expecting string
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.models['Parametric-Panel'].parts['plate'].seedEdgeBySize(constraint=FINER, 
    edges=[18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 
    39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51], size=0.025)
#* TypeError: edges[0]; found int, expecting Vertex
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.models['Parametric-Panel'].parts['plate'].seedEdgeBySize(constraint=FINER, 
    edges=[18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 
    39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51], size=0.025)
#* TypeError: edges[0]; found int, expecting Vertex
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.Model(name='Parametric-Panel')
mdb.models['Parametric-Panel'].ConstrainedSketch(name='geometry', sheetSize=
    4.0)
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-1.5, 0.0), 
    point2=(1.5, 0.0))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(-0.9, 0.0), 
    point2=(-0.9, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.9500000000000001, 0.125), point2=(-0.85, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.9, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.30000000000000004, 0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((-0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    -0.35000000000000003, 0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (-0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.29999999999999993, 0.0), point2=(0.29999999999999993, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.3, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.24999999999999994, 0.125), point2=(0.3499999999999999, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.3, 0.125), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8999999999999998, 0.0), point2=(0.8999999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt((0.9, 
    0.0625), ))
mdb.models['Parametric-Panel'].sketches['geometry'].Line(point1=(
    0.8499999999999998, 0.125), point2=(0.9499999999999998, 0.125))
mdb.models['Parametric-Panel'].sketches['geometry'].HorizontalConstraint(
    entity=mdb.models['Parametric-Panel'].sketches['geometry'].geometry.findAt(
    (0.9, 0.125), ))
mdb.models['Parametric-Panel'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['Parametric-Panel'].parts['plate'].BaseShellExtrude(depth=3.0, 
    sketch=mdb.models['Parametric-Panel'].sketches['geometry'])
del mdb.models['Parametric-Panel'].sketches['geometry']
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ), name='PlateFace')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.916667, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 
    0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), 
    (0.0, -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((-0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['Parametric-Panel'].parts['plate'].Set(faces=
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((-0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 
    0.0)), ), name='WebFaces')
mdb.models['Parametric-Panel'].Material(name='steel')
mdb.models['Parametric-Panel'].materials['steel'].Elastic(table=((
    200000000000.0, 0.3), ))
mdb.models['Parametric-Panel'].materials['steel'].Density(table=((7850, 
    296.15), ))
mdb.models['Parametric-Panel'].materials['steel'].Plastic(table=[(355000000.0, 
    0.0), (355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 
    0.026), (368868911.433451, 0.046), (376380203.187135, 0.066), (
    383487562.389997, 0.086)])
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.0078'
    , nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Parametric-Panel'].HomogeneousShellSection(idealization=
    NO_IDEALIZATION, integrationRule=SIMPSON, material='steel', name=
    'local-thickness', nodalThicknessField='', numIntPts=5, poissonDefinition=
    DEFAULT, preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, 
    thicknessField='', thicknessModulus=None, thicknessType=UNIFORM, 
    useDensity=OFF)
mdb.models['Parametric-Panel'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Parametric-Panel'].BuckleStep(maxIterations=500, name='Buckle-Step'
    , numEigen=5, previous='Initial')
mdb.models['Parametric-Panel'].parts['plate'].setMeshControls(elemShape=QUAD, 
    regions=mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 
    0.0, 1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 
    0.0, 2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 
    0.0, 2.0), (0.0, -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((
    -0.916667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.916667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), 
    (1.0, 0.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['Parametric-Panel'].parts['plate'].setElementType(elemTypes=(
    ElemType(elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['Parametric-Panel'].parts['plate'].faces.findAt(((1.1, 0.0, 
    1.0), (0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 
    2.0), (0.0, -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((
    -0.916667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.916667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), 
    (1.0, 0.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), ))
mdb.models['Parametric-Panel'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
del mdb.models['Parametric-Panel']
del mdb.models['Model-1']
mdb.models['eigen'].parts['plate'].seedPart(deviationFactor=0.1, minSizeFactor=
    0.1, size=0.15)
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=[18, 
    19, 20, 21, 18, 22, 23, 24, 27, 28, 29, 30, 27, 31, 32, 33, 36, 37, 38, 39, 
    36, 40, 41, 42, 45, 46, 47, 48, 45, 49, 50, 51], size=0.025)
#* TypeError: edges[0]; found int, expecting Vertex
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=[18, 
    19, 20, 21, 18, 22, 23, 24, 27, 28, 29, 30, 27, 31, 32, 33, 36, 37, 38, 39, 
    36, 40, 41, 42, 45, 46, 47, 48, 45, 49, 50, 51], size=0.025)
#* TypeError: edges[0]; found int, expecting Vertex
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=[18, 
    19, 20, 21, 18, 22, 23, 24, 27, 28, 29, 30, 27, 31, 32, 33, 36, 37, 38, 39, 
    36, 40, 41, 42, 45, 46, 47, 48, 45, 49, 50, 51], size=0.025)
#* TypeError: edges[0]; found int, expecting Vertex
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FREE, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), )], 
    size=0.5)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), )], 
    size=0.5)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.0078', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.004', thicknessAssignment=FROM_SECTION)
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), )], size=
    0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].Part(dimensionality=THREE_D, name='panel', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['panel'].BaseShell(sketch=
    mdb.models['eigen'].parts['plate'])
#* Invalid sketch
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].Part(dimensionality=THREE_D, name='panel', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['panel'].BaseShell(sketch=
    mdb.models['eigen'].parts['plate'])
#* Invalid sketch
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), )], size=
    0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].PartFromMesh(copySets=False, name='panel')
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].PartFromMesh(copySets=False, name='panel')
mdb.models['eigen'].rootAssembly.regenerate()
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[2], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[5], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[6], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[9], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[11], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[190], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[570], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[571], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[572], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[573], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[574], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[575], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[576], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[577], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[578], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[579], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[580], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[581], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[582], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[583], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[584], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[585], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[586], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[587], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[588], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[589], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[590], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[591], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[592], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[593], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[594], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[595], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[596], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[597], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[598], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[926], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[927], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[928], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[929], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[930], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[931], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[932], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[933], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[934], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[935], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[936], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[937], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[938], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[939], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[940], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[941], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[942], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[943], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[944], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[945], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[946], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[947], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[948], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[949], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[950], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[951], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[952], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[953], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[954], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1104], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1105], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1106], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1107], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1108], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1109], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1110], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1111], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1112], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1113], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1114], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1115], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1116], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1117], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((2.22044604925031e-16, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1118], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1119], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1120], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1121], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1122], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1123], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1124], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1125], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1126], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1127], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1128], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1129], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1130], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1131], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1132], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1214], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1215], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1216], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1217], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1218], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1219], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[0], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[3], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[4], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[7], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[8], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[10], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[363], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[364], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[365], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[366], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[367], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[368], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[369], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[370], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[371], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[372], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[373], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[374], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[375], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[376], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[377], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[378], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[379], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[380], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[381], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[382], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[383], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[384], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[385], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[386], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[387], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[388], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[389], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[390], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[391], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[392], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[393], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[394], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[395], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[396], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[397], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[398], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[399], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[400], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[401], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[402], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[403], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[404], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[405], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[406], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[407], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[408], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[409], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[410], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[411], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[412], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[413], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[414], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[415], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[416], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[417], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[418], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[419], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[420], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[748], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[749], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[750], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[751], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[752], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[753], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[754], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[755], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[756], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[757], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[758], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[759], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[760], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[761], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[762], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[763], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[764], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[765], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[766], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[767], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[768], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[769], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[770], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[771], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[772], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[773], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[774], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[775], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[776], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1133], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1134], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1135], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1136], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1137], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1138], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1139], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1140], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1141], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1142], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1143], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1144], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1145], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1146], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((
    -4.44089209850063e-16, 0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1147], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1148], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1149], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1150], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1151], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1152], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1153], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1154], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1155], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1156], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1157], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1158], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1159], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1160], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1161], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1162], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1163], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1164], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1165], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1166], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1167], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1168], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1169], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1170], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1171], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1172], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1173], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1174], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1175], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1176], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1177], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1178], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1179], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1180], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1181], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1182], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1183], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1184], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1190], ))
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[147:150]+\
    mdb.models['eigen'].parts['plate'].elements[297:300]+\
    mdb.models['eigen'].parts['plate'].elements[447:450]+\
    mdb.models['eigen'].parts['plate'].elements[597:600]+\
    mdb.models['eigen'].parts['plate'].elements[747:750]+\
    mdb.models['eigen'].parts['plate'].elements[897:900]+\
    mdb.models['eigen'].parts['plate'].elements[1047:1050]+\
    mdb.models['eigen'].parts['plate'].elements[1197:1200]+\
    mdb.models['eigen'].parts['plate'].elements[1347:1350]+\
    mdb.models['eigen'].parts['plate'].elements[1497:1500]+\
    mdb.models['eigen'].parts['plate'].elements[1647:1650]+\
    mdb.models['eigen'].parts['plate'].elements[1797:1800]+\
    mdb.models['eigen'].parts['plate'].elements[1947:1950]+\
    mdb.models['eigen'].parts['plate'].elements[2097:2100]+\
    mdb.models['eigen'].parts['plate'].elements[2247:2250]+\
    mdb.models['eigen'].parts['plate'].elements[2397:2400]+\
    mdb.models['eigen'].parts['plate'].elements[2547:2550]+\
    mdb.models['eigen'].parts['plate'].elements[2697:2700]+\
    mdb.models['eigen'].parts['plate'].elements[2847:2850]+\
    mdb.models['eigen'].parts['plate'].elements[2997:3000]+\
    mdb.models['eigen'].parts['plate'].elements[3147:3150]+\
    mdb.models['eigen'].parts['plate'].elements[3297:3300]+\
    mdb.models['eigen'].parts['plate'].elements[3447:3450]+\
    mdb.models['eigen'].parts['plate'].elements[3597:3600]+\
    mdb.models['eigen'].parts['plate'].elements[3747:3750]+\
    mdb.models['eigen'].parts['plate'].elements[3897:3900]+\
    mdb.models['eigen'].parts['plate'].elements[4047:4050]+\
    mdb.models['eigen'].parts['plate'].elements[4197:4200]+\
    mdb.models['eigen'].parts['plate'].elements[4347:4350]+\
    mdb.models['eigen'].parts['plate'].elements[4497:4503]+\
    mdb.models['eigen'].parts['plate'].elements[4650:4653]+\
    mdb.models['eigen'].parts['plate'].elements[4800:4803]+\
    mdb.models['eigen'].parts['plate'].elements[4950:4953]+\
    mdb.models['eigen'].parts['plate'].elements[5100:5103]+\
    mdb.models['eigen'].parts['plate'].elements[5250:5253]+\
    mdb.models['eigen'].parts['plate'].elements[5400:5403]+\
    mdb.models['eigen'].parts['plate'].elements[5550:5553]+\
    mdb.models['eigen'].parts['plate'].elements[5700:5703]+\
    mdb.models['eigen'].parts['plate'].elements[5850:5853]+\
    mdb.models['eigen'].parts['plate'].elements[6000:6003]+\
    mdb.models['eigen'].parts['plate'].elements[6150:6153]+\
    mdb.models['eigen'].parts['plate'].elements[6300:6303]+\
    mdb.models['eigen'].parts['plate'].elements[6450:6453]+\
    mdb.models['eigen'].parts['plate'].elements[6600:6603]+\
    mdb.models['eigen'].parts['plate'].elements[6750:6753]+\
    mdb.models['eigen'].parts['plate'].elements[6900:6903]+\
    mdb.models['eigen'].parts['plate'].elements[7050:7053]+\
    mdb.models['eigen'].parts['plate'].elements[7200:7203]+\
    mdb.models['eigen'].parts['plate'].elements[7350:7353]+\
    mdb.models['eigen'].parts['plate'].elements[7500:7503]+\
    mdb.models['eigen'].parts['plate'].elements[7650:7653]+\
    mdb.models['eigen'].parts['plate'].elements[7800:7803]+\
    mdb.models['eigen'].parts['plate'].elements[7950:7953]+\
    mdb.models['eigen'].parts['plate'].elements[8100:8103]+\
    mdb.models['eigen'].parts['plate'].elements[8250:8253]+\
    mdb.models['eigen'].parts['plate'].elements[8400:8403]+\
    mdb.models['eigen'].parts['plate'].elements[8550:8553]+\
    mdb.models['eigen'].parts['plate'].elements[8700:8703]+\
    mdb.models['eigen'].parts['plate'].elements[8850:8853]+\
    mdb.models['eigen'].parts['plate'].elements[9000:9003]+\
    mdb.models['eigen'].parts['plate'].elements[9150:9153]+\
    mdb.models['eigen'].parts['plate'].elements[9300:9303]+\
    mdb.models['eigen'].parts['plate'].elements[9450:9453]+\
    mdb.models['eigen'].parts['plate'].elements[9600:9603]+\
    mdb.models['eigen'].parts['plate'].elements[9750:9753]+\
    mdb.models['eigen'].parts['plate'].elements[9900:9903]+\
    mdb.models['eigen'].parts['plate'].elements[10050:10053]+\
    mdb.models['eigen'].parts['plate'].elements[10200:10203]+\
    mdb.models['eigen'].parts['plate'].elements[10350:10353]+\
    mdb.models['eigen'].parts['plate'].elements[10500:10503]+\
    mdb.models['eigen'].parts['plate'].elements[10650:10653]+\
    mdb.models['eigen'].parts['plate'].elements[10800:10803]+\
    mdb.models['eigen'].parts['plate'].elements[10950:10953]+\
    mdb.models['eigen'].parts['plate'].elements[11100:11103]+\
    mdb.models['eigen'].parts['plate'].elements[11250:11253]+\
    mdb.models['eigen'].parts['plate'].elements[11400:11403]+\
    mdb.models['eigen'].parts['plate'].elements[11550:11553]+\
    mdb.models['eigen'].parts['plate'].elements[11700:11703]+\
    mdb.models['eigen'].parts['plate'].elements[11850:11853]+\
    mdb.models['eigen'].parts['plate'].elements[12000:12003]+\
    mdb.models['eigen'].parts['plate'].elements[12150:12153]+\
    mdb.models['eigen'].parts['plate'].elements[12300:12303]+\
    mdb.models['eigen'].parts['plate'].elements[12450:12453]+\
    mdb.models['eigen'].parts['plate'].elements[12600:12603]+\
    mdb.models['eigen'].parts['plate'].elements[12750:12753]+\
    mdb.models['eigen'].parts['plate'].elements[12900:12903]+\
    mdb.models['eigen'].parts['plate'].elements[13050:13053]+\
    mdb.models['eigen'].parts['plate'].elements[13200:13203]+\
    mdb.models['eigen'].parts['plate'].elements[13350:13353]+\
    mdb.models['eigen'].parts['plate'].elements[13647:13650]+\
    mdb.models['eigen'].parts['plate'].elements[13797:13800]+\
    mdb.models['eigen'].parts['plate'].elements[13947:13950]+\
    mdb.models['eigen'].parts['plate'].elements[14097:14100]+\
    mdb.models['eigen'].parts['plate'].elements[14247:14250]+\
    mdb.models['eigen'].parts['plate'].elements[14397:14400]+\
    mdb.models['eigen'].parts['plate'].elements[14547:14550]+\
    mdb.models['eigen'].parts['plate'].elements[14697:14700]+\
    mdb.models['eigen'].parts['plate'].elements[14847:14850]+\
    mdb.models['eigen'].parts['plate'].elements[14997:15000]+\
    mdb.models['eigen'].parts['plate'].elements[15147:15150]+\
    mdb.models['eigen'].parts['plate'].elements[15297:15300]+\
    mdb.models['eigen'].parts['plate'].elements[15447:15450]+\
    mdb.models['eigen'].parts['plate'].elements[15597:15600]+\
    mdb.models['eigen'].parts['plate'].elements[15747:15750]+\
    mdb.models['eigen'].parts['plate'].elements[15897:15900]+\
    mdb.models['eigen'].parts['plate'].elements[16047:16050]+\
    mdb.models['eigen'].parts['plate'].elements[16197:16200]+\
    mdb.models['eigen'].parts['plate'].elements[16347:16350]+\
    mdb.models['eigen'].parts['plate'].elements[16497:16500]+\
    mdb.models['eigen'].parts['plate'].elements[16647:16650]+\
    mdb.models['eigen'].parts['plate'].elements[16797:16800]+\
    mdb.models['eigen'].parts['plate'].elements[16947:16950]+\
    mdb.models['eigen'].parts['plate'].elements[17097:17100]+\
    mdb.models['eigen'].parts['plate'].elements[17247:17250]+\
    mdb.models['eigen'].parts['plate'].elements[17397:17400]+\
    mdb.models['eigen'].parts['plate'].elements[17547:17550]+\
    mdb.models['eigen'].parts['plate'].elements[17697:17700]+\
    mdb.models['eigen'].parts['plate'].elements[17847:17850]+\
    mdb.models['eigen'].parts['plate'].elements[17997:18003]+\
    mdb.models['eigen'].parts['plate'].elements[18150:18153]+\
    mdb.models['eigen'].parts['plate'].elements[18300:18303]+\
    mdb.models['eigen'].parts['plate'].elements[18450:18453]+\
    mdb.models['eigen'].parts['plate'].elements[18600:18603]+\
    mdb.models['eigen'].parts['plate'].elements[18750:18753]+\
    mdb.models['eigen'].parts['plate'].elements[18900:18903]+\
    mdb.models['eigen'].parts['plate'].elements[19050:19053]+\
    mdb.models['eigen'].parts['plate'].elements[19200:19203]+\
    mdb.models['eigen'].parts['plate'].elements[19350:19353]+\
    mdb.models['eigen'].parts['plate'].elements[19500:19503]+\
    mdb.models['eigen'].parts['plate'].elements[19650:19653]+\
    mdb.models['eigen'].parts['plate'].elements[19800:19803]+\
    mdb.models['eigen'].parts['plate'].elements[19950:19953]+\
    mdb.models['eigen'].parts['plate'].elements[20100:20103]+\
    mdb.models['eigen'].parts['plate'].elements[20250:20253]+\
    mdb.models['eigen'].parts['plate'].elements[20400:20403]+\
    mdb.models['eigen'].parts['plate'].elements[20550:20553]+\
    mdb.models['eigen'].parts['plate'].elements[20700:20703]+\
    mdb.models['eigen'].parts['plate'].elements[20850:20853]+\
    mdb.models['eigen'].parts['plate'].elements[21000:21003]+\
    mdb.models['eigen'].parts['plate'].elements[21150:21153]+\
    mdb.models['eigen'].parts['plate'].elements[21300:21303]+\
    mdb.models['eigen'].parts['plate'].elements[21450:21453]+\
    mdb.models['eigen'].parts['plate'].elements[21600:21603]+\
    mdb.models['eigen'].parts['plate'].elements[21750:21753]+\
    mdb.models['eigen'].parts['plate'].elements[21900:21903]+\
    mdb.models['eigen'].parts['plate'].elements[22050:22053]+\
    mdb.models['eigen'].parts['plate'].elements[22200:22203]+\
    mdb.models['eigen'].parts['plate'].elements[22350:22353]+\
    mdb.models['eigen'].parts['plate'].elements[23387:23388]+\
    mdb.models['eigen'].parts['plate'].elements[23392:23394]+\
    mdb.models['eigen'].parts['plate'].elements[23397:23400]+\
    mdb.models['eigen'].parts['plate'].elements[24887:24888]+\
    mdb.models['eigen'].parts['plate'].elements[24892:24894]+\
    mdb.models['eigen'].parts['plate'].elements[24897:24900]+\
    mdb.models['eigen'].parts['plate'].elements[26387:26388]+\
    mdb.models['eigen'].parts['plate'].elements[26392:26394]+\
    mdb.models['eigen'].parts['plate'].elements[26397:26400]+\
    mdb.models['eigen'].parts['plate'].elements[27887:27888]+\
    mdb.models['eigen'].parts['plate'].elements[27892:27894]+\
    mdb.models['eigen'].parts['plate'].elements[27897:27900], name=
    'left-thickness-region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['left-thickness-region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[0:3]+\
    mdb.models['eigen'].parts['plate'].elements[150:153]+\
    mdb.models['eigen'].parts['plate'].elements[300:303]+\
    mdb.models['eigen'].parts['plate'].elements[450:453]+\
    mdb.models['eigen'].parts['plate'].elements[600:603]+\
    mdb.models['eigen'].parts['plate'].elements[750:753]+\
    mdb.models['eigen'].parts['plate'].elements[900:903]+\
    mdb.models['eigen'].parts['plate'].elements[1050:1053]+\
    mdb.models['eigen'].parts['plate'].elements[1200:1203]+\
    mdb.models['eigen'].parts['plate'].elements[1350:1353]+\
    mdb.models['eigen'].parts['plate'].elements[1500:1503]+\
    mdb.models['eigen'].parts['plate'].elements[1650:1653]+\
    mdb.models['eigen'].parts['plate'].elements[1800:1803]+\
    mdb.models['eigen'].parts['plate'].elements[1950:1953]+\
    mdb.models['eigen'].parts['plate'].elements[2100:2103]+\
    mdb.models['eigen'].parts['plate'].elements[2250:2253]+\
    mdb.models['eigen'].parts['plate'].elements[2400:2403]+\
    mdb.models['eigen'].parts['plate'].elements[2550:2553]+\
    mdb.models['eigen'].parts['plate'].elements[2700:2703]+\
    mdb.models['eigen'].parts['plate'].elements[2850:2853]+\
    mdb.models['eigen'].parts['plate'].elements[3000:3003]+\
    mdb.models['eigen'].parts['plate'].elements[3150:3153]+\
    mdb.models['eigen'].parts['plate'].elements[3300:3303]+\
    mdb.models['eigen'].parts['plate'].elements[3450:3453]+\
    mdb.models['eigen'].parts['plate'].elements[3600:3603]+\
    mdb.models['eigen'].parts['plate'].elements[3750:3753]+\
    mdb.models['eigen'].parts['plate'].elements[3900:3903]+\
    mdb.models['eigen'].parts['plate'].elements[4050:4053]+\
    mdb.models['eigen'].parts['plate'].elements[4200:4203]+\
    mdb.models['eigen'].parts['plate'].elements[4350:4353]+\
    mdb.models['eigen'].parts['plate'].elements[4647:4650]+\
    mdb.models['eigen'].parts['plate'].elements[4797:4800]+\
    mdb.models['eigen'].parts['plate'].elements[4947:4950]+\
    mdb.models['eigen'].parts['plate'].elements[5097:5100]+\
    mdb.models['eigen'].parts['plate'].elements[5247:5250]+\
    mdb.models['eigen'].parts['plate'].elements[5397:5400]+\
    mdb.models['eigen'].parts['plate'].elements[5547:5550]+\
    mdb.models['eigen'].parts['plate'].elements[5697:5700]+\
    mdb.models['eigen'].parts['plate'].elements[5847:5850]+\
    mdb.models['eigen'].parts['plate'].elements[5997:6000]+\
    mdb.models['eigen'].parts['plate'].elements[6147:6150]+\
    mdb.models['eigen'].parts['plate'].elements[6297:6300]+\
    mdb.models['eigen'].parts['plate'].elements[6447:6450]+\
    mdb.models['eigen'].parts['plate'].elements[6597:6600]+\
    mdb.models['eigen'].parts['plate'].elements[6747:6750]+\
    mdb.models['eigen'].parts['plate'].elements[6897:6900]+\
    mdb.models['eigen'].parts['plate'].elements[7047:7050]+\
    mdb.models['eigen'].parts['plate'].elements[7197:7200]+\
    mdb.models['eigen'].parts['plate'].elements[7347:7350]+\
    mdb.models['eigen'].parts['plate'].elements[7497:7500]+\
    mdb.models['eigen'].parts['plate'].elements[7647:7650]+\
    mdb.models['eigen'].parts['plate'].elements[7797:7800]+\
    mdb.models['eigen'].parts['plate'].elements[7947:7950]+\
    mdb.models['eigen'].parts['plate'].elements[8097:8100]+\
    mdb.models['eigen'].parts['plate'].elements[8247:8250]+\
    mdb.models['eigen'].parts['plate'].elements[8397:8400]+\
    mdb.models['eigen'].parts['plate'].elements[8547:8550]+\
    mdb.models['eigen'].parts['plate'].elements[8697:8700]+\
    mdb.models['eigen'].parts['plate'].elements[8847:8850]+\
    mdb.models['eigen'].parts['plate'].elements[8997:9000]+\
    mdb.models['eigen'].parts['plate'].elements[9147:9150]+\
    mdb.models['eigen'].parts['plate'].elements[9297:9300]+\
    mdb.models['eigen'].parts['plate'].elements[9447:9450]+\
    mdb.models['eigen'].parts['plate'].elements[9597:9600]+\
    mdb.models['eigen'].parts['plate'].elements[9747:9750]+\
    mdb.models['eigen'].parts['plate'].elements[9897:9900]+\
    mdb.models['eigen'].parts['plate'].elements[10047:10050]+\
    mdb.models['eigen'].parts['plate'].elements[10197:10200]+\
    mdb.models['eigen'].parts['plate'].elements[10347:10350]+\
    mdb.models['eigen'].parts['plate'].elements[10497:10500]+\
    mdb.models['eigen'].parts['plate'].elements[10647:10650]+\
    mdb.models['eigen'].parts['plate'].elements[10797:10800]+\
    mdb.models['eigen'].parts['plate'].elements[10947:10950]+\
    mdb.models['eigen'].parts['plate'].elements[11097:11100]+\
    mdb.models['eigen'].parts['plate'].elements[11247:11250]+\
    mdb.models['eigen'].parts['plate'].elements[11397:11400]+\
    mdb.models['eigen'].parts['plate'].elements[11547:11550]+\
    mdb.models['eigen'].parts['plate'].elements[11697:11700]+\
    mdb.models['eigen'].parts['plate'].elements[11847:11850]+\
    mdb.models['eigen'].parts['plate'].elements[11997:12000]+\
    mdb.models['eigen'].parts['plate'].elements[12147:12150]+\
    mdb.models['eigen'].parts['plate'].elements[12297:12300]+\
    mdb.models['eigen'].parts['plate'].elements[12447:12450]+\
    mdb.models['eigen'].parts['plate'].elements[12597:12600]+\
    mdb.models['eigen'].parts['plate'].elements[12747:12750]+\
    mdb.models['eigen'].parts['plate'].elements[12897:12900]+\
    mdb.models['eigen'].parts['plate'].elements[13047:13050]+\
    mdb.models['eigen'].parts['plate'].elements[13197:13200]+\
    mdb.models['eigen'].parts['plate'].elements[13347:13350]+\
    mdb.models['eigen'].parts['plate'].elements[13497:13503]+\
    mdb.models['eigen'].parts['plate'].elements[13650:13653]+\
    mdb.models['eigen'].parts['plate'].elements[13800:13803]+\
    mdb.models['eigen'].parts['plate'].elements[13950:13953]+\
    mdb.models['eigen'].parts['plate'].elements[14100:14103]+\
    mdb.models['eigen'].parts['plate'].elements[14250:14253]+\
    mdb.models['eigen'].parts['plate'].elements[14400:14403]+\
    mdb.models['eigen'].parts['plate'].elements[14550:14553]+\
    mdb.models['eigen'].parts['plate'].elements[14700:14703]+\
    mdb.models['eigen'].parts['plate'].elements[14850:14853]+\
    mdb.models['eigen'].parts['plate'].elements[15000:15003]+\
    mdb.models['eigen'].parts['plate'].elements[15150:15153]+\
    mdb.models['eigen'].parts['plate'].elements[15300:15303]+\
    mdb.models['eigen'].parts['plate'].elements[15450:15453]+\
    mdb.models['eigen'].parts['plate'].elements[15600:15603]+\
    mdb.models['eigen'].parts['plate'].elements[15750:15753]+\
    mdb.models['eigen'].parts['plate'].elements[15900:15903]+\
    mdb.models['eigen'].parts['plate'].elements[16050:16053]+\
    mdb.models['eigen'].parts['plate'].elements[16200:16203]+\
    mdb.models['eigen'].parts['plate'].elements[16350:16353]+\
    mdb.models['eigen'].parts['plate'].elements[16500:16503]+\
    mdb.models['eigen'].parts['plate'].elements[16650:16653]+\
    mdb.models['eigen'].parts['plate'].elements[16800:16803]+\
    mdb.models['eigen'].parts['plate'].elements[16950:16953]+\
    mdb.models['eigen'].parts['plate'].elements[17100:17103]+\
    mdb.models['eigen'].parts['plate'].elements[17250:17253]+\
    mdb.models['eigen'].parts['plate'].elements[17400:17403]+\
    mdb.models['eigen'].parts['plate'].elements[17550:17553]+\
    mdb.models['eigen'].parts['plate'].elements[17700:17703]+\
    mdb.models['eigen'].parts['plate'].elements[17850:17853]+\
    mdb.models['eigen'].parts['plate'].elements[18147:18150]+\
    mdb.models['eigen'].parts['plate'].elements[18297:18300]+\
    mdb.models['eigen'].parts['plate'].elements[18447:18450]+\
    mdb.models['eigen'].parts['plate'].elements[18597:18600]+\
    mdb.models['eigen'].parts['plate'].elements[18747:18750]+\
    mdb.models['eigen'].parts['plate'].elements[18897:18900]+\
    mdb.models['eigen'].parts['plate'].elements[19047:19050]+\
    mdb.models['eigen'].parts['plate'].elements[19197:19200]+\
    mdb.models['eigen'].parts['plate'].elements[19347:19350]+\
    mdb.models['eigen'].parts['plate'].elements[19497:19500]+\
    mdb.models['eigen'].parts['plate'].elements[19647:19650]+\
    mdb.models['eigen'].parts['plate'].elements[19797:19800]+\
    mdb.models['eigen'].parts['plate'].elements[19947:19950]+\
    mdb.models['eigen'].parts['plate'].elements[20097:20100]+\
    mdb.models['eigen'].parts['plate'].elements[20247:20250]+\
    mdb.models['eigen'].parts['plate'].elements[20397:20400]+\
    mdb.models['eigen'].parts['plate'].elements[20547:20550]+\
    mdb.models['eigen'].parts['plate'].elements[20697:20700]+\
    mdb.models['eigen'].parts['plate'].elements[20847:20850]+\
    mdb.models['eigen'].parts['plate'].elements[20997:21000]+\
    mdb.models['eigen'].parts['plate'].elements[21147:21150]+\
    mdb.models['eigen'].parts['plate'].elements[21297:21300]+\
    mdb.models['eigen'].parts['plate'].elements[21447:21450]+\
    mdb.models['eigen'].parts['plate'].elements[21597:21600]+\
    mdb.models['eigen'].parts['plate'].elements[21747:21750]+\
    mdb.models['eigen'].parts['plate'].elements[21897:21900]+\
    mdb.models['eigen'].parts['plate'].elements[22047:22050]+\
    mdb.models['eigen'].parts['plate'].elements[22197:22200]+\
    mdb.models['eigen'].parts['plate'].elements[22347:22350]+\
    mdb.models['eigen'].parts['plate'].elements[22497:22500]+\
    mdb.models['eigen'].parts['plate'].elements[22503:22506]+\
    mdb.models['eigen'].parts['plate'].elements[22510:22512]+\
    mdb.models['eigen'].parts['plate'].elements[22517:22518]+\
    mdb.models['eigen'].parts['plate'].elements[24003:24006]+\
    mdb.models['eigen'].parts['plate'].elements[24010:24012]+\
    mdb.models['eigen'].parts['plate'].elements[24017:24018]+\
    mdb.models['eigen'].parts['plate'].elements[25503:25506]+\
    mdb.models['eigen'].parts['plate'].elements[25510:25512]+\
    mdb.models['eigen'].parts['plate'].elements[25517:25518]+\
    mdb.models['eigen'].parts['plate'].elements[27003:27006]+\
    mdb.models['eigen'].parts['plate'].elements[27010:27012]+\
    mdb.models['eigen'].parts['plate'].elements[27017:27018], name=
    'right_thickness_region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['right_thickness_region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].rootAssembly.Instance(dependent=ON, name='panel', part=
    mdb.models['eigen'].parts['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 0, 1), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 1, 0), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.translate(instanceList=['panel'], vector=(
    -1.5, 0.0, 0.0))
mdb.models['eigen'].rootAssembly.Set(name='Web0-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[6:7])
#* TypeError: arg1(labels)[0]; found tuple, expecting int
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), )], 
    size=0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].PartFromMesh(copySets=False, name='panel')
mdb.models['eigen'].rootAssembly.regenerate()
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[2], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[5], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[6], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[9], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[11], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[190], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[570], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[571], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[572], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[573], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[574], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[575], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[576], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[577], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[578], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[579], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[580], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[581], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[582], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[583], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[584], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[585], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[586], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[587], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[588], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[589], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[590], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[591], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[592], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[593], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[594], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[595], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[596], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[597], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[598], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[926], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[927], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[928], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[929], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[930], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[931], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[932], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[933], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[934], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[935], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[936], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[937], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[938], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[939], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[940], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[941], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[942], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[943], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[944], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[945], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[946], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[947], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[948], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[949], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[950], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[951], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[952], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[953], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[954], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1104], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1105], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1106], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1107], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1108], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1109], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1110], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1111], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1112], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1113], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1114], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1115], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1116], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1117], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((2.22044604925031e-16, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1118], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1119], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1120], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1121], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1122], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1123], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1124], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1125], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1126], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1127], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1128], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1129], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1130], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1131], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1132], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1214], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1215], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1216], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1217], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1218], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1219], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[0], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[3], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[4], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[7], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[8], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[10], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[363], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[364], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[365], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[366], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[367], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[368], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[369], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[370], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[371], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[372], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[373], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[374], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[375], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[376], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[377], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[378], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[379], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[380], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[381], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[382], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[383], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[384], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[385], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[386], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[387], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[388], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[389], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[390], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[391], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[392], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[393], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[394], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[395], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[396], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[397], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[398], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[399], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[400], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[401], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[402], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[403], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[404], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[405], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[406], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[407], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[408], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[409], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[410], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[411], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[412], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[413], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[414], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[415], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[416], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[417], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[418], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[419], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[420], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[748], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[749], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[750], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[751], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[752], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[753], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[754], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[755], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[756], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[757], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[758], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[759], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[760], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[761], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[762], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[763], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[764], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[765], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[766], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[767], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[768], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[769], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[770], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[771], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[772], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[773], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[774], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[775], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[776], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1133], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1134], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1135], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1136], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1137], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1138], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1139], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1140], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1141], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1142], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1143], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1144], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1145], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1146], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((
    -4.44089209850063e-16, 0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1147], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1148], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1149], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1150], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1151], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1152], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1153], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1154], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1155], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1156], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1157], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1158], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1159], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1160], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1161], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1162], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1163], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1164], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1165], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1166], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1167], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1168], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1169], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1170], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1171], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1172], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1173], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1174], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1175], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1176], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1177], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1178], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1179], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1180], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1181], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1182], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1183], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1184], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1190], ))
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[147:150]+\
    mdb.models['eigen'].parts['plate'].elements[297:300]+\
    mdb.models['eigen'].parts['plate'].elements[447:450]+\
    mdb.models['eigen'].parts['plate'].elements[597:600]+\
    mdb.models['eigen'].parts['plate'].elements[747:750]+\
    mdb.models['eigen'].parts['plate'].elements[897:900]+\
    mdb.models['eigen'].parts['plate'].elements[1047:1050]+\
    mdb.models['eigen'].parts['plate'].elements[1197:1200]+\
    mdb.models['eigen'].parts['plate'].elements[1347:1350]+\
    mdb.models['eigen'].parts['plate'].elements[1497:1500]+\
    mdb.models['eigen'].parts['plate'].elements[1647:1650]+\
    mdb.models['eigen'].parts['plate'].elements[1797:1800]+\
    mdb.models['eigen'].parts['plate'].elements[1947:1950]+\
    mdb.models['eigen'].parts['plate'].elements[2097:2100]+\
    mdb.models['eigen'].parts['plate'].elements[2247:2250]+\
    mdb.models['eigen'].parts['plate'].elements[2397:2400]+\
    mdb.models['eigen'].parts['plate'].elements[2547:2550]+\
    mdb.models['eigen'].parts['plate'].elements[2697:2700]+\
    mdb.models['eigen'].parts['plate'].elements[2847:2850]+\
    mdb.models['eigen'].parts['plate'].elements[2997:3000]+\
    mdb.models['eigen'].parts['plate'].elements[3147:3150]+\
    mdb.models['eigen'].parts['plate'].elements[3297:3300]+\
    mdb.models['eigen'].parts['plate'].elements[3447:3450]+\
    mdb.models['eigen'].parts['plate'].elements[3597:3600]+\
    mdb.models['eigen'].parts['plate'].elements[3747:3750]+\
    mdb.models['eigen'].parts['plate'].elements[3897:3900]+\
    mdb.models['eigen'].parts['plate'].elements[4047:4050]+\
    mdb.models['eigen'].parts['plate'].elements[4197:4200]+\
    mdb.models['eigen'].parts['plate'].elements[4347:4350]+\
    mdb.models['eigen'].parts['plate'].elements[4497:4503]+\
    mdb.models['eigen'].parts['plate'].elements[4650:4653]+\
    mdb.models['eigen'].parts['plate'].elements[4800:4803]+\
    mdb.models['eigen'].parts['plate'].elements[4950:4953]+\
    mdb.models['eigen'].parts['plate'].elements[5100:5103]+\
    mdb.models['eigen'].parts['plate'].elements[5250:5253]+\
    mdb.models['eigen'].parts['plate'].elements[5400:5403]+\
    mdb.models['eigen'].parts['plate'].elements[5550:5553]+\
    mdb.models['eigen'].parts['plate'].elements[5700:5703]+\
    mdb.models['eigen'].parts['plate'].elements[5850:5853]+\
    mdb.models['eigen'].parts['plate'].elements[6000:6003]+\
    mdb.models['eigen'].parts['plate'].elements[6150:6153]+\
    mdb.models['eigen'].parts['plate'].elements[6300:6303]+\
    mdb.models['eigen'].parts['plate'].elements[6450:6453]+\
    mdb.models['eigen'].parts['plate'].elements[6600:6603]+\
    mdb.models['eigen'].parts['plate'].elements[6750:6753]+\
    mdb.models['eigen'].parts['plate'].elements[6900:6903]+\
    mdb.models['eigen'].parts['plate'].elements[7050:7053]+\
    mdb.models['eigen'].parts['plate'].elements[7200:7203]+\
    mdb.models['eigen'].parts['plate'].elements[7350:7353]+\
    mdb.models['eigen'].parts['plate'].elements[7500:7503]+\
    mdb.models['eigen'].parts['plate'].elements[7650:7653]+\
    mdb.models['eigen'].parts['plate'].elements[7800:7803]+\
    mdb.models['eigen'].parts['plate'].elements[7950:7953]+\
    mdb.models['eigen'].parts['plate'].elements[8100:8103]+\
    mdb.models['eigen'].parts['plate'].elements[8250:8253]+\
    mdb.models['eigen'].parts['plate'].elements[8400:8403]+\
    mdb.models['eigen'].parts['plate'].elements[8550:8553]+\
    mdb.models['eigen'].parts['plate'].elements[8700:8703]+\
    mdb.models['eigen'].parts['plate'].elements[8850:8853]+\
    mdb.models['eigen'].parts['plate'].elements[9000:9003]+\
    mdb.models['eigen'].parts['plate'].elements[9150:9153]+\
    mdb.models['eigen'].parts['plate'].elements[9300:9303]+\
    mdb.models['eigen'].parts['plate'].elements[9450:9453]+\
    mdb.models['eigen'].parts['plate'].elements[9600:9603]+\
    mdb.models['eigen'].parts['plate'].elements[9750:9753]+\
    mdb.models['eigen'].parts['plate'].elements[9900:9903]+\
    mdb.models['eigen'].parts['plate'].elements[10050:10053]+\
    mdb.models['eigen'].parts['plate'].elements[10200:10203]+\
    mdb.models['eigen'].parts['plate'].elements[10350:10353]+\
    mdb.models['eigen'].parts['plate'].elements[10500:10503]+\
    mdb.models['eigen'].parts['plate'].elements[10650:10653]+\
    mdb.models['eigen'].parts['plate'].elements[10800:10803]+\
    mdb.models['eigen'].parts['plate'].elements[10950:10953]+\
    mdb.models['eigen'].parts['plate'].elements[11100:11103]+\
    mdb.models['eigen'].parts['plate'].elements[11250:11253]+\
    mdb.models['eigen'].parts['plate'].elements[11400:11403]+\
    mdb.models['eigen'].parts['plate'].elements[11550:11553]+\
    mdb.models['eigen'].parts['plate'].elements[11700:11703]+\
    mdb.models['eigen'].parts['plate'].elements[11850:11853]+\
    mdb.models['eigen'].parts['plate'].elements[12000:12003]+\
    mdb.models['eigen'].parts['plate'].elements[12150:12153]+\
    mdb.models['eigen'].parts['plate'].elements[12300:12303]+\
    mdb.models['eigen'].parts['plate'].elements[12450:12453]+\
    mdb.models['eigen'].parts['plate'].elements[12600:12603]+\
    mdb.models['eigen'].parts['plate'].elements[12750:12753]+\
    mdb.models['eigen'].parts['plate'].elements[12900:12903]+\
    mdb.models['eigen'].parts['plate'].elements[13050:13053]+\
    mdb.models['eigen'].parts['plate'].elements[13200:13203]+\
    mdb.models['eigen'].parts['plate'].elements[13350:13353]+\
    mdb.models['eigen'].parts['plate'].elements[13647:13650]+\
    mdb.models['eigen'].parts['plate'].elements[13797:13800]+\
    mdb.models['eigen'].parts['plate'].elements[13947:13950]+\
    mdb.models['eigen'].parts['plate'].elements[14097:14100]+\
    mdb.models['eigen'].parts['plate'].elements[14247:14250]+\
    mdb.models['eigen'].parts['plate'].elements[14397:14400]+\
    mdb.models['eigen'].parts['plate'].elements[14547:14550]+\
    mdb.models['eigen'].parts['plate'].elements[14697:14700]+\
    mdb.models['eigen'].parts['plate'].elements[14847:14850]+\
    mdb.models['eigen'].parts['plate'].elements[14997:15000]+\
    mdb.models['eigen'].parts['plate'].elements[15147:15150]+\
    mdb.models['eigen'].parts['plate'].elements[15297:15300]+\
    mdb.models['eigen'].parts['plate'].elements[15447:15450]+\
    mdb.models['eigen'].parts['plate'].elements[15597:15600]+\
    mdb.models['eigen'].parts['plate'].elements[15747:15750]+\
    mdb.models['eigen'].parts['plate'].elements[15897:15900]+\
    mdb.models['eigen'].parts['plate'].elements[16047:16050]+\
    mdb.models['eigen'].parts['plate'].elements[16197:16200]+\
    mdb.models['eigen'].parts['plate'].elements[16347:16350]+\
    mdb.models['eigen'].parts['plate'].elements[16497:16500]+\
    mdb.models['eigen'].parts['plate'].elements[16647:16650]+\
    mdb.models['eigen'].parts['plate'].elements[16797:16800]+\
    mdb.models['eigen'].parts['plate'].elements[16947:16950]+\
    mdb.models['eigen'].parts['plate'].elements[17097:17100]+\
    mdb.models['eigen'].parts['plate'].elements[17247:17250]+\
    mdb.models['eigen'].parts['plate'].elements[17397:17400]+\
    mdb.models['eigen'].parts['plate'].elements[17547:17550]+\
    mdb.models['eigen'].parts['plate'].elements[17697:17700]+\
    mdb.models['eigen'].parts['plate'].elements[17847:17850]+\
    mdb.models['eigen'].parts['plate'].elements[17997:18003]+\
    mdb.models['eigen'].parts['plate'].elements[18150:18153]+\
    mdb.models['eigen'].parts['plate'].elements[18300:18303]+\
    mdb.models['eigen'].parts['plate'].elements[18450:18453]+\
    mdb.models['eigen'].parts['plate'].elements[18600:18603]+\
    mdb.models['eigen'].parts['plate'].elements[18750:18753]+\
    mdb.models['eigen'].parts['plate'].elements[18900:18903]+\
    mdb.models['eigen'].parts['plate'].elements[19050:19053]+\
    mdb.models['eigen'].parts['plate'].elements[19200:19203]+\
    mdb.models['eigen'].parts['plate'].elements[19350:19353]+\
    mdb.models['eigen'].parts['plate'].elements[19500:19503]+\
    mdb.models['eigen'].parts['plate'].elements[19650:19653]+\
    mdb.models['eigen'].parts['plate'].elements[19800:19803]+\
    mdb.models['eigen'].parts['plate'].elements[19950:19953]+\
    mdb.models['eigen'].parts['plate'].elements[20100:20103]+\
    mdb.models['eigen'].parts['plate'].elements[20250:20253]+\
    mdb.models['eigen'].parts['plate'].elements[20400:20403]+\
    mdb.models['eigen'].parts['plate'].elements[20550:20553]+\
    mdb.models['eigen'].parts['plate'].elements[20700:20703]+\
    mdb.models['eigen'].parts['plate'].elements[20850:20853]+\
    mdb.models['eigen'].parts['plate'].elements[21000:21003]+\
    mdb.models['eigen'].parts['plate'].elements[21150:21153]+\
    mdb.models['eigen'].parts['plate'].elements[21300:21303]+\
    mdb.models['eigen'].parts['plate'].elements[21450:21453]+\
    mdb.models['eigen'].parts['plate'].elements[21600:21603]+\
    mdb.models['eigen'].parts['plate'].elements[21750:21753]+\
    mdb.models['eigen'].parts['plate'].elements[21900:21903]+\
    mdb.models['eigen'].parts['plate'].elements[22050:22053]+\
    mdb.models['eigen'].parts['plate'].elements[22200:22203]+\
    mdb.models['eigen'].parts['plate'].elements[22350:22353]+\
    mdb.models['eigen'].parts['plate'].elements[23387:23388]+\
    mdb.models['eigen'].parts['plate'].elements[23392:23394]+\
    mdb.models['eigen'].parts['plate'].elements[23397:23400]+\
    mdb.models['eigen'].parts['plate'].elements[24887:24888]+\
    mdb.models['eigen'].parts['plate'].elements[24892:24894]+\
    mdb.models['eigen'].parts['plate'].elements[24897:24900]+\
    mdb.models['eigen'].parts['plate'].elements[26387:26388]+\
    mdb.models['eigen'].parts['plate'].elements[26392:26394]+\
    mdb.models['eigen'].parts['plate'].elements[26397:26400]+\
    mdb.models['eigen'].parts['plate'].elements[27887:27888]+\
    mdb.models['eigen'].parts['plate'].elements[27892:27894]+\
    mdb.models['eigen'].parts['plate'].elements[27897:27900], name=
    'left-thickness-region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['left-thickness-region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[0:3]+\
    mdb.models['eigen'].parts['plate'].elements[150:153]+\
    mdb.models['eigen'].parts['plate'].elements[300:303]+\
    mdb.models['eigen'].parts['plate'].elements[450:453]+\
    mdb.models['eigen'].parts['plate'].elements[600:603]+\
    mdb.models['eigen'].parts['plate'].elements[750:753]+\
    mdb.models['eigen'].parts['plate'].elements[900:903]+\
    mdb.models['eigen'].parts['plate'].elements[1050:1053]+\
    mdb.models['eigen'].parts['plate'].elements[1200:1203]+\
    mdb.models['eigen'].parts['plate'].elements[1350:1353]+\
    mdb.models['eigen'].parts['plate'].elements[1500:1503]+\
    mdb.models['eigen'].parts['plate'].elements[1650:1653]+\
    mdb.models['eigen'].parts['plate'].elements[1800:1803]+\
    mdb.models['eigen'].parts['plate'].elements[1950:1953]+\
    mdb.models['eigen'].parts['plate'].elements[2100:2103]+\
    mdb.models['eigen'].parts['plate'].elements[2250:2253]+\
    mdb.models['eigen'].parts['plate'].elements[2400:2403]+\
    mdb.models['eigen'].parts['plate'].elements[2550:2553]+\
    mdb.models['eigen'].parts['plate'].elements[2700:2703]+\
    mdb.models['eigen'].parts['plate'].elements[2850:2853]+\
    mdb.models['eigen'].parts['plate'].elements[3000:3003]+\
    mdb.models['eigen'].parts['plate'].elements[3150:3153]+\
    mdb.models['eigen'].parts['plate'].elements[3300:3303]+\
    mdb.models['eigen'].parts['plate'].elements[3450:3453]+\
    mdb.models['eigen'].parts['plate'].elements[3600:3603]+\
    mdb.models['eigen'].parts['plate'].elements[3750:3753]+\
    mdb.models['eigen'].parts['plate'].elements[3900:3903]+\
    mdb.models['eigen'].parts['plate'].elements[4050:4053]+\
    mdb.models['eigen'].parts['plate'].elements[4200:4203]+\
    mdb.models['eigen'].parts['plate'].elements[4350:4353]+\
    mdb.models['eigen'].parts['plate'].elements[4647:4650]+\
    mdb.models['eigen'].parts['plate'].elements[4797:4800]+\
    mdb.models['eigen'].parts['plate'].elements[4947:4950]+\
    mdb.models['eigen'].parts['plate'].elements[5097:5100]+\
    mdb.models['eigen'].parts['plate'].elements[5247:5250]+\
    mdb.models['eigen'].parts['plate'].elements[5397:5400]+\
    mdb.models['eigen'].parts['plate'].elements[5547:5550]+\
    mdb.models['eigen'].parts['plate'].elements[5697:5700]+\
    mdb.models['eigen'].parts['plate'].elements[5847:5850]+\
    mdb.models['eigen'].parts['plate'].elements[5997:6000]+\
    mdb.models['eigen'].parts['plate'].elements[6147:6150]+\
    mdb.models['eigen'].parts['plate'].elements[6297:6300]+\
    mdb.models['eigen'].parts['plate'].elements[6447:6450]+\
    mdb.models['eigen'].parts['plate'].elements[6597:6600]+\
    mdb.models['eigen'].parts['plate'].elements[6747:6750]+\
    mdb.models['eigen'].parts['plate'].elements[6897:6900]+\
    mdb.models['eigen'].parts['plate'].elements[7047:7050]+\
    mdb.models['eigen'].parts['plate'].elements[7197:7200]+\
    mdb.models['eigen'].parts['plate'].elements[7347:7350]+\
    mdb.models['eigen'].parts['plate'].elements[7497:7500]+\
    mdb.models['eigen'].parts['plate'].elements[7647:7650]+\
    mdb.models['eigen'].parts['plate'].elements[7797:7800]+\
    mdb.models['eigen'].parts['plate'].elements[7947:7950]+\
    mdb.models['eigen'].parts['plate'].elements[8097:8100]+\
    mdb.models['eigen'].parts['plate'].elements[8247:8250]+\
    mdb.models['eigen'].parts['plate'].elements[8397:8400]+\
    mdb.models['eigen'].parts['plate'].elements[8547:8550]+\
    mdb.models['eigen'].parts['plate'].elements[8697:8700]+\
    mdb.models['eigen'].parts['plate'].elements[8847:8850]+\
    mdb.models['eigen'].parts['plate'].elements[8997:9000]+\
    mdb.models['eigen'].parts['plate'].elements[9147:9150]+\
    mdb.models['eigen'].parts['plate'].elements[9297:9300]+\
    mdb.models['eigen'].parts['plate'].elements[9447:9450]+\
    mdb.models['eigen'].parts['plate'].elements[9597:9600]+\
    mdb.models['eigen'].parts['plate'].elements[9747:9750]+\
    mdb.models['eigen'].parts['plate'].elements[9897:9900]+\
    mdb.models['eigen'].parts['plate'].elements[10047:10050]+\
    mdb.models['eigen'].parts['plate'].elements[10197:10200]+\
    mdb.models['eigen'].parts['plate'].elements[10347:10350]+\
    mdb.models['eigen'].parts['plate'].elements[10497:10500]+\
    mdb.models['eigen'].parts['plate'].elements[10647:10650]+\
    mdb.models['eigen'].parts['plate'].elements[10797:10800]+\
    mdb.models['eigen'].parts['plate'].elements[10947:10950]+\
    mdb.models['eigen'].parts['plate'].elements[11097:11100]+\
    mdb.models['eigen'].parts['plate'].elements[11247:11250]+\
    mdb.models['eigen'].parts['plate'].elements[11397:11400]+\
    mdb.models['eigen'].parts['plate'].elements[11547:11550]+\
    mdb.models['eigen'].parts['plate'].elements[11697:11700]+\
    mdb.models['eigen'].parts['plate'].elements[11847:11850]+\
    mdb.models['eigen'].parts['plate'].elements[11997:12000]+\
    mdb.models['eigen'].parts['plate'].elements[12147:12150]+\
    mdb.models['eigen'].parts['plate'].elements[12297:12300]+\
    mdb.models['eigen'].parts['plate'].elements[12447:12450]+\
    mdb.models['eigen'].parts['plate'].elements[12597:12600]+\
    mdb.models['eigen'].parts['plate'].elements[12747:12750]+\
    mdb.models['eigen'].parts['plate'].elements[12897:12900]+\
    mdb.models['eigen'].parts['plate'].elements[13047:13050]+\
    mdb.models['eigen'].parts['plate'].elements[13197:13200]+\
    mdb.models['eigen'].parts['plate'].elements[13347:13350]+\
    mdb.models['eigen'].parts['plate'].elements[13497:13503]+\
    mdb.models['eigen'].parts['plate'].elements[13650:13653]+\
    mdb.models['eigen'].parts['plate'].elements[13800:13803]+\
    mdb.models['eigen'].parts['plate'].elements[13950:13953]+\
    mdb.models['eigen'].parts['plate'].elements[14100:14103]+\
    mdb.models['eigen'].parts['plate'].elements[14250:14253]+\
    mdb.models['eigen'].parts['plate'].elements[14400:14403]+\
    mdb.models['eigen'].parts['plate'].elements[14550:14553]+\
    mdb.models['eigen'].parts['plate'].elements[14700:14703]+\
    mdb.models['eigen'].parts['plate'].elements[14850:14853]+\
    mdb.models['eigen'].parts['plate'].elements[15000:15003]+\
    mdb.models['eigen'].parts['plate'].elements[15150:15153]+\
    mdb.models['eigen'].parts['plate'].elements[15300:15303]+\
    mdb.models['eigen'].parts['plate'].elements[15450:15453]+\
    mdb.models['eigen'].parts['plate'].elements[15600:15603]+\
    mdb.models['eigen'].parts['plate'].elements[15750:15753]+\
    mdb.models['eigen'].parts['plate'].elements[15900:15903]+\
    mdb.models['eigen'].parts['plate'].elements[16050:16053]+\
    mdb.models['eigen'].parts['plate'].elements[16200:16203]+\
    mdb.models['eigen'].parts['plate'].elements[16350:16353]+\
    mdb.models['eigen'].parts['plate'].elements[16500:16503]+\
    mdb.models['eigen'].parts['plate'].elements[16650:16653]+\
    mdb.models['eigen'].parts['plate'].elements[16800:16803]+\
    mdb.models['eigen'].parts['plate'].elements[16950:16953]+\
    mdb.models['eigen'].parts['plate'].elements[17100:17103]+\
    mdb.models['eigen'].parts['plate'].elements[17250:17253]+\
    mdb.models['eigen'].parts['plate'].elements[17400:17403]+\
    mdb.models['eigen'].parts['plate'].elements[17550:17553]+\
    mdb.models['eigen'].parts['plate'].elements[17700:17703]+\
    mdb.models['eigen'].parts['plate'].elements[17850:17853]+\
    mdb.models['eigen'].parts['plate'].elements[18147:18150]+\
    mdb.models['eigen'].parts['plate'].elements[18297:18300]+\
    mdb.models['eigen'].parts['plate'].elements[18447:18450]+\
    mdb.models['eigen'].parts['plate'].elements[18597:18600]+\
    mdb.models['eigen'].parts['plate'].elements[18747:18750]+\
    mdb.models['eigen'].parts['plate'].elements[18897:18900]+\
    mdb.models['eigen'].parts['plate'].elements[19047:19050]+\
    mdb.models['eigen'].parts['plate'].elements[19197:19200]+\
    mdb.models['eigen'].parts['plate'].elements[19347:19350]+\
    mdb.models['eigen'].parts['plate'].elements[19497:19500]+\
    mdb.models['eigen'].parts['plate'].elements[19647:19650]+\
    mdb.models['eigen'].parts['plate'].elements[19797:19800]+\
    mdb.models['eigen'].parts['plate'].elements[19947:19950]+\
    mdb.models['eigen'].parts['plate'].elements[20097:20100]+\
    mdb.models['eigen'].parts['plate'].elements[20247:20250]+\
    mdb.models['eigen'].parts['plate'].elements[20397:20400]+\
    mdb.models['eigen'].parts['plate'].elements[20547:20550]+\
    mdb.models['eigen'].parts['plate'].elements[20697:20700]+\
    mdb.models['eigen'].parts['plate'].elements[20847:20850]+\
    mdb.models['eigen'].parts['plate'].elements[20997:21000]+\
    mdb.models['eigen'].parts['plate'].elements[21147:21150]+\
    mdb.models['eigen'].parts['plate'].elements[21297:21300]+\
    mdb.models['eigen'].parts['plate'].elements[21447:21450]+\
    mdb.models['eigen'].parts['plate'].elements[21597:21600]+\
    mdb.models['eigen'].parts['plate'].elements[21747:21750]+\
    mdb.models['eigen'].parts['plate'].elements[21897:21900]+\
    mdb.models['eigen'].parts['plate'].elements[22047:22050]+\
    mdb.models['eigen'].parts['plate'].elements[22197:22200]+\
    mdb.models['eigen'].parts['plate'].elements[22347:22350]+\
    mdb.models['eigen'].parts['plate'].elements[22497:22500]+\
    mdb.models['eigen'].parts['plate'].elements[22503:22506]+\
    mdb.models['eigen'].parts['plate'].elements[22510:22512]+\
    mdb.models['eigen'].parts['plate'].elements[22517:22518]+\
    mdb.models['eigen'].parts['plate'].elements[24003:24006]+\
    mdb.models['eigen'].parts['plate'].elements[24010:24012]+\
    mdb.models['eigen'].parts['plate'].elements[24017:24018]+\
    mdb.models['eigen'].parts['plate'].elements[25503:25506]+\
    mdb.models['eigen'].parts['plate'].elements[25510:25512]+\
    mdb.models['eigen'].parts['plate'].elements[25517:25518]+\
    mdb.models['eigen'].parts['plate'].elements[27003:27006]+\
    mdb.models['eigen'].parts['plate'].elements[27010:27012]+\
    mdb.models['eigen'].parts['plate'].elements[27017:27018], name=
    'right_thickness_region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['right_thickness_region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].rootAssembly.Instance(dependent=ON, name='panel', part=
    mdb.models['eigen'].parts['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 0, 1), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 1, 0), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.translate(instanceList=['panel'], vector=(
    -1.5, 0.0, 0.0))
mdb.models['eigen'].rootAssembly.Set(name='Web0-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[6:7])
mdb.models['eigen'].rootAssembly.Set(name='Web0-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[7:8]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[12:14]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[1220:1230])
mdb.models['eigen'].Equation(nam='Web0-2', terms=((1.0, 'Web0-Follower', 2), (
    -1.0, 'Web0-Main', 2)))
#* TypeError: keyword error on nam
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].PartFromMesh(copySets=False, name='panel')
mdb.models['eigen'].rootAssembly.regenerate()
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[2], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[5], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[6], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[9], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[11], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[190], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[570], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[571], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[572], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[573], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[574], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[575], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[576], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[577], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[578], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[579], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[580], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[581], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[582], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[583], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[584], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[585], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[586], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[587], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[588], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[589], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[590], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[591], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[592], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[593], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[594], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[595], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[596], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[597], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[598], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[926], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[927], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[928], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[929], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[930], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[931], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[932], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[933], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[934], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[935], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[936], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[937], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[938], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[939], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[940], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[941], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[942], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[943], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[944], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[945], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[946], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[947], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[948], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[949], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[950], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[951], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[952], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[953], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[954], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1104], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1105], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1106], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1107], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1108], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1109], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1110], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1111], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1112], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1113], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1114], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1115], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1116], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1117], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((2.22044604925031e-16, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1118], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1119], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1120], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1121], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1122], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1123], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1124], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1125], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1126], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1127], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1128], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1129], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1130], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1131], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1132], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1214], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1215], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1216], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1217], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1218], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1219], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[0], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[3], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[4], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[7], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[8], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[10], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[363], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[364], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[365], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[366], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[367], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[368], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[369], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[370], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[371], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[372], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[373], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[374], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[375], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[376], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[377], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[378], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[379], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[380], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[381], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[382], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[383], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[384], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[385], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[386], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[387], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[388], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[389], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[390], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[391], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[392], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[393], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[394], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[395], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[396], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[397], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[398], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[399], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[400], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[401], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[402], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[403], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[404], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[405], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[406], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[407], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[408], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[409], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[410], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[411], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[412], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[413], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[414], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[415], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[416], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[417], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[418], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[419], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[420], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[748], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[749], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[750], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[751], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[752], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[753], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[754], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[755], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[756], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[757], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[758], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[759], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[760], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[761], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[762], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[763], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[764], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[765], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[766], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[767], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[768], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[769], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[770], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[771], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[772], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[773], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[774], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[775], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[776], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1133], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1134], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1135], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1136], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1137], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1138], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1139], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1140], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1141], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1142], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1143], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1144], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1145], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1146], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((
    -4.44089209850063e-16, 0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1147], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1148], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1149], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1150], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1151], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1152], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1153], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1154], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1155], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1156], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1157], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1158], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1159], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1160], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1161], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1162], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1163], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1164], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1165], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1166], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1167], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1168], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1169], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1170], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1171], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1172], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1173], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1174], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1175], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1176], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1177], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1178], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1179], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1180], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1181], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1182], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1183], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1184], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1190], ))
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[147:150]+\
    mdb.models['eigen'].parts['plate'].elements[297:300]+\
    mdb.models['eigen'].parts['plate'].elements[447:450]+\
    mdb.models['eigen'].parts['plate'].elements[597:600]+\
    mdb.models['eigen'].parts['plate'].elements[747:750]+\
    mdb.models['eigen'].parts['plate'].elements[897:900]+\
    mdb.models['eigen'].parts['plate'].elements[1047:1050]+\
    mdb.models['eigen'].parts['plate'].elements[1197:1200]+\
    mdb.models['eigen'].parts['plate'].elements[1347:1350]+\
    mdb.models['eigen'].parts['plate'].elements[1497:1500]+\
    mdb.models['eigen'].parts['plate'].elements[1647:1650]+\
    mdb.models['eigen'].parts['plate'].elements[1797:1800]+\
    mdb.models['eigen'].parts['plate'].elements[1947:1950]+\
    mdb.models['eigen'].parts['plate'].elements[2097:2100]+\
    mdb.models['eigen'].parts['plate'].elements[2247:2250]+\
    mdb.models['eigen'].parts['plate'].elements[2397:2400]+\
    mdb.models['eigen'].parts['plate'].elements[2547:2550]+\
    mdb.models['eigen'].parts['plate'].elements[2697:2700]+\
    mdb.models['eigen'].parts['plate'].elements[2847:2850]+\
    mdb.models['eigen'].parts['plate'].elements[2997:3000]+\
    mdb.models['eigen'].parts['plate'].elements[3147:3150]+\
    mdb.models['eigen'].parts['plate'].elements[3297:3300]+\
    mdb.models['eigen'].parts['plate'].elements[3447:3450]+\
    mdb.models['eigen'].parts['plate'].elements[3597:3600]+\
    mdb.models['eigen'].parts['plate'].elements[3747:3750]+\
    mdb.models['eigen'].parts['plate'].elements[3897:3900]+\
    mdb.models['eigen'].parts['plate'].elements[4047:4050]+\
    mdb.models['eigen'].parts['plate'].elements[4197:4200]+\
    mdb.models['eigen'].parts['plate'].elements[4347:4350]+\
    mdb.models['eigen'].parts['plate'].elements[4497:4503]+\
    mdb.models['eigen'].parts['plate'].elements[4650:4653]+\
    mdb.models['eigen'].parts['plate'].elements[4800:4803]+\
    mdb.models['eigen'].parts['plate'].elements[4950:4953]+\
    mdb.models['eigen'].parts['plate'].elements[5100:5103]+\
    mdb.models['eigen'].parts['plate'].elements[5250:5253]+\
    mdb.models['eigen'].parts['plate'].elements[5400:5403]+\
    mdb.models['eigen'].parts['plate'].elements[5550:5553]+\
    mdb.models['eigen'].parts['plate'].elements[5700:5703]+\
    mdb.models['eigen'].parts['plate'].elements[5850:5853]+\
    mdb.models['eigen'].parts['plate'].elements[6000:6003]+\
    mdb.models['eigen'].parts['plate'].elements[6150:6153]+\
    mdb.models['eigen'].parts['plate'].elements[6300:6303]+\
    mdb.models['eigen'].parts['plate'].elements[6450:6453]+\
    mdb.models['eigen'].parts['plate'].elements[6600:6603]+\
    mdb.models['eigen'].parts['plate'].elements[6750:6753]+\
    mdb.models['eigen'].parts['plate'].elements[6900:6903]+\
    mdb.models['eigen'].parts['plate'].elements[7050:7053]+\
    mdb.models['eigen'].parts['plate'].elements[7200:7203]+\
    mdb.models['eigen'].parts['plate'].elements[7350:7353]+\
    mdb.models['eigen'].parts['plate'].elements[7500:7503]+\
    mdb.models['eigen'].parts['plate'].elements[7650:7653]+\
    mdb.models['eigen'].parts['plate'].elements[7800:7803]+\
    mdb.models['eigen'].parts['plate'].elements[7950:7953]+\
    mdb.models['eigen'].parts['plate'].elements[8100:8103]+\
    mdb.models['eigen'].parts['plate'].elements[8250:8253]+\
    mdb.models['eigen'].parts['plate'].elements[8400:8403]+\
    mdb.models['eigen'].parts['plate'].elements[8550:8553]+\
    mdb.models['eigen'].parts['plate'].elements[8700:8703]+\
    mdb.models['eigen'].parts['plate'].elements[8850:8853]+\
    mdb.models['eigen'].parts['plate'].elements[9000:9003]+\
    mdb.models['eigen'].parts['plate'].elements[9150:9153]+\
    mdb.models['eigen'].parts['plate'].elements[9300:9303]+\
    mdb.models['eigen'].parts['plate'].elements[9450:9453]+\
    mdb.models['eigen'].parts['plate'].elements[9600:9603]+\
    mdb.models['eigen'].parts['plate'].elements[9750:9753]+\
    mdb.models['eigen'].parts['plate'].elements[9900:9903]+\
    mdb.models['eigen'].parts['plate'].elements[10050:10053]+\
    mdb.models['eigen'].parts['plate'].elements[10200:10203]+\
    mdb.models['eigen'].parts['plate'].elements[10350:10353]+\
    mdb.models['eigen'].parts['plate'].elements[10500:10503]+\
    mdb.models['eigen'].parts['plate'].elements[10650:10653]+\
    mdb.models['eigen'].parts['plate'].elements[10800:10803]+\
    mdb.models['eigen'].parts['plate'].elements[10950:10953]+\
    mdb.models['eigen'].parts['plate'].elements[11100:11103]+\
    mdb.models['eigen'].parts['plate'].elements[11250:11253]+\
    mdb.models['eigen'].parts['plate'].elements[11400:11403]+\
    mdb.models['eigen'].parts['plate'].elements[11550:11553]+\
    mdb.models['eigen'].parts['plate'].elements[11700:11703]+\
    mdb.models['eigen'].parts['plate'].elements[11850:11853]+\
    mdb.models['eigen'].parts['plate'].elements[12000:12003]+\
    mdb.models['eigen'].parts['plate'].elements[12150:12153]+\
    mdb.models['eigen'].parts['plate'].elements[12300:12303]+\
    mdb.models['eigen'].parts['plate'].elements[12450:12453]+\
    mdb.models['eigen'].parts['plate'].elements[12600:12603]+\
    mdb.models['eigen'].parts['plate'].elements[12750:12753]+\
    mdb.models['eigen'].parts['plate'].elements[12900:12903]+\
    mdb.models['eigen'].parts['plate'].elements[13050:13053]+\
    mdb.models['eigen'].parts['plate'].elements[13200:13203]+\
    mdb.models['eigen'].parts['plate'].elements[13350:13353]+\
    mdb.models['eigen'].parts['plate'].elements[13647:13650]+\
    mdb.models['eigen'].parts['plate'].elements[13797:13800]+\
    mdb.models['eigen'].parts['plate'].elements[13947:13950]+\
    mdb.models['eigen'].parts['plate'].elements[14097:14100]+\
    mdb.models['eigen'].parts['plate'].elements[14247:14250]+\
    mdb.models['eigen'].parts['plate'].elements[14397:14400]+\
    mdb.models['eigen'].parts['plate'].elements[14547:14550]+\
    mdb.models['eigen'].parts['plate'].elements[14697:14700]+\
    mdb.models['eigen'].parts['plate'].elements[14847:14850]+\
    mdb.models['eigen'].parts['plate'].elements[14997:15000]+\
    mdb.models['eigen'].parts['plate'].elements[15147:15150]+\
    mdb.models['eigen'].parts['plate'].elements[15297:15300]+\
    mdb.models['eigen'].parts['plate'].elements[15447:15450]+\
    mdb.models['eigen'].parts['plate'].elements[15597:15600]+\
    mdb.models['eigen'].parts['plate'].elements[15747:15750]+\
    mdb.models['eigen'].parts['plate'].elements[15897:15900]+\
    mdb.models['eigen'].parts['plate'].elements[16047:16050]+\
    mdb.models['eigen'].parts['plate'].elements[16197:16200]+\
    mdb.models['eigen'].parts['plate'].elements[16347:16350]+\
    mdb.models['eigen'].parts['plate'].elements[16497:16500]+\
    mdb.models['eigen'].parts['plate'].elements[16647:16650]+\
    mdb.models['eigen'].parts['plate'].elements[16797:16800]+\
    mdb.models['eigen'].parts['plate'].elements[16947:16950]+\
    mdb.models['eigen'].parts['plate'].elements[17097:17100]+\
    mdb.models['eigen'].parts['plate'].elements[17247:17250]+\
    mdb.models['eigen'].parts['plate'].elements[17397:17400]+\
    mdb.models['eigen'].parts['plate'].elements[17547:17550]+\
    mdb.models['eigen'].parts['plate'].elements[17697:17700]+\
    mdb.models['eigen'].parts['plate'].elements[17847:17850]+\
    mdb.models['eigen'].parts['plate'].elements[17997:18003]+\
    mdb.models['eigen'].parts['plate'].elements[18150:18153]+\
    mdb.models['eigen'].parts['plate'].elements[18300:18303]+\
    mdb.models['eigen'].parts['plate'].elements[18450:18453]+\
    mdb.models['eigen'].parts['plate'].elements[18600:18603]+\
    mdb.models['eigen'].parts['plate'].elements[18750:18753]+\
    mdb.models['eigen'].parts['plate'].elements[18900:18903]+\
    mdb.models['eigen'].parts['plate'].elements[19050:19053]+\
    mdb.models['eigen'].parts['plate'].elements[19200:19203]+\
    mdb.models['eigen'].parts['plate'].elements[19350:19353]+\
    mdb.models['eigen'].parts['plate'].elements[19500:19503]+\
    mdb.models['eigen'].parts['plate'].elements[19650:19653]+\
    mdb.models['eigen'].parts['plate'].elements[19800:19803]+\
    mdb.models['eigen'].parts['plate'].elements[19950:19953]+\
    mdb.models['eigen'].parts['plate'].elements[20100:20103]+\
    mdb.models['eigen'].parts['plate'].elements[20250:20253]+\
    mdb.models['eigen'].parts['plate'].elements[20400:20403]+\
    mdb.models['eigen'].parts['plate'].elements[20550:20553]+\
    mdb.models['eigen'].parts['plate'].elements[20700:20703]+\
    mdb.models['eigen'].parts['plate'].elements[20850:20853]+\
    mdb.models['eigen'].parts['plate'].elements[21000:21003]+\
    mdb.models['eigen'].parts['plate'].elements[21150:21153]+\
    mdb.models['eigen'].parts['plate'].elements[21300:21303]+\
    mdb.models['eigen'].parts['plate'].elements[21450:21453]+\
    mdb.models['eigen'].parts['plate'].elements[21600:21603]+\
    mdb.models['eigen'].parts['plate'].elements[21750:21753]+\
    mdb.models['eigen'].parts['plate'].elements[21900:21903]+\
    mdb.models['eigen'].parts['plate'].elements[22050:22053]+\
    mdb.models['eigen'].parts['plate'].elements[22200:22203]+\
    mdb.models['eigen'].parts['plate'].elements[22350:22353]+\
    mdb.models['eigen'].parts['plate'].elements[23387:23388]+\
    mdb.models['eigen'].parts['plate'].elements[23392:23394]+\
    mdb.models['eigen'].parts['plate'].elements[23397:23400]+\
    mdb.models['eigen'].parts['plate'].elements[24887:24888]+\
    mdb.models['eigen'].parts['plate'].elements[24892:24894]+\
    mdb.models['eigen'].parts['plate'].elements[24897:24900]+\
    mdb.models['eigen'].parts['plate'].elements[26387:26388]+\
    mdb.models['eigen'].parts['plate'].elements[26392:26394]+\
    mdb.models['eigen'].parts['plate'].elements[26397:26400]+\
    mdb.models['eigen'].parts['plate'].elements[27887:27888]+\
    mdb.models['eigen'].parts['plate'].elements[27892:27894]+\
    mdb.models['eigen'].parts['plate'].elements[27897:27900], name=
    'left-thickness-region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['left-thickness-region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[0:3]+\
    mdb.models['eigen'].parts['plate'].elements[150:153]+\
    mdb.models['eigen'].parts['plate'].elements[300:303]+\
    mdb.models['eigen'].parts['plate'].elements[450:453]+\
    mdb.models['eigen'].parts['plate'].elements[600:603]+\
    mdb.models['eigen'].parts['plate'].elements[750:753]+\
    mdb.models['eigen'].parts['plate'].elements[900:903]+\
    mdb.models['eigen'].parts['plate'].elements[1050:1053]+\
    mdb.models['eigen'].parts['plate'].elements[1200:1203]+\
    mdb.models['eigen'].parts['plate'].elements[1350:1353]+\
    mdb.models['eigen'].parts['plate'].elements[1500:1503]+\
    mdb.models['eigen'].parts['plate'].elements[1650:1653]+\
    mdb.models['eigen'].parts['plate'].elements[1800:1803]+\
    mdb.models['eigen'].parts['plate'].elements[1950:1953]+\
    mdb.models['eigen'].parts['plate'].elements[2100:2103]+\
    mdb.models['eigen'].parts['plate'].elements[2250:2253]+\
    mdb.models['eigen'].parts['plate'].elements[2400:2403]+\
    mdb.models['eigen'].parts['plate'].elements[2550:2553]+\
    mdb.models['eigen'].parts['plate'].elements[2700:2703]+\
    mdb.models['eigen'].parts['plate'].elements[2850:2853]+\
    mdb.models['eigen'].parts['plate'].elements[3000:3003]+\
    mdb.models['eigen'].parts['plate'].elements[3150:3153]+\
    mdb.models['eigen'].parts['plate'].elements[3300:3303]+\
    mdb.models['eigen'].parts['plate'].elements[3450:3453]+\
    mdb.models['eigen'].parts['plate'].elements[3600:3603]+\
    mdb.models['eigen'].parts['plate'].elements[3750:3753]+\
    mdb.models['eigen'].parts['plate'].elements[3900:3903]+\
    mdb.models['eigen'].parts['plate'].elements[4050:4053]+\
    mdb.models['eigen'].parts['plate'].elements[4200:4203]+\
    mdb.models['eigen'].parts['plate'].elements[4350:4353]+\
    mdb.models['eigen'].parts['plate'].elements[4647:4650]+\
    mdb.models['eigen'].parts['plate'].elements[4797:4800]+\
    mdb.models['eigen'].parts['plate'].elements[4947:4950]+\
    mdb.models['eigen'].parts['plate'].elements[5097:5100]+\
    mdb.models['eigen'].parts['plate'].elements[5247:5250]+\
    mdb.models['eigen'].parts['plate'].elements[5397:5400]+\
    mdb.models['eigen'].parts['plate'].elements[5547:5550]+\
    mdb.models['eigen'].parts['plate'].elements[5697:5700]+\
    mdb.models['eigen'].parts['plate'].elements[5847:5850]+\
    mdb.models['eigen'].parts['plate'].elements[5997:6000]+\
    mdb.models['eigen'].parts['plate'].elements[6147:6150]+\
    mdb.models['eigen'].parts['plate'].elements[6297:6300]+\
    mdb.models['eigen'].parts['plate'].elements[6447:6450]+\
    mdb.models['eigen'].parts['plate'].elements[6597:6600]+\
    mdb.models['eigen'].parts['plate'].elements[6747:6750]+\
    mdb.models['eigen'].parts['plate'].elements[6897:6900]+\
    mdb.models['eigen'].parts['plate'].elements[7047:7050]+\
    mdb.models['eigen'].parts['plate'].elements[7197:7200]+\
    mdb.models['eigen'].parts['plate'].elements[7347:7350]+\
    mdb.models['eigen'].parts['plate'].elements[7497:7500]+\
    mdb.models['eigen'].parts['plate'].elements[7647:7650]+\
    mdb.models['eigen'].parts['plate'].elements[7797:7800]+\
    mdb.models['eigen'].parts['plate'].elements[7947:7950]+\
    mdb.models['eigen'].parts['plate'].elements[8097:8100]+\
    mdb.models['eigen'].parts['plate'].elements[8247:8250]+\
    mdb.models['eigen'].parts['plate'].elements[8397:8400]+\
    mdb.models['eigen'].parts['plate'].elements[8547:8550]+\
    mdb.models['eigen'].parts['plate'].elements[8697:8700]+\
    mdb.models['eigen'].parts['plate'].elements[8847:8850]+\
    mdb.models['eigen'].parts['plate'].elements[8997:9000]+\
    mdb.models['eigen'].parts['plate'].elements[9147:9150]+\
    mdb.models['eigen'].parts['plate'].elements[9297:9300]+\
    mdb.models['eigen'].parts['plate'].elements[9447:9450]+\
    mdb.models['eigen'].parts['plate'].elements[9597:9600]+\
    mdb.models['eigen'].parts['plate'].elements[9747:9750]+\
    mdb.models['eigen'].parts['plate'].elements[9897:9900]+\
    mdb.models['eigen'].parts['plate'].elements[10047:10050]+\
    mdb.models['eigen'].parts['plate'].elements[10197:10200]+\
    mdb.models['eigen'].parts['plate'].elements[10347:10350]+\
    mdb.models['eigen'].parts['plate'].elements[10497:10500]+\
    mdb.models['eigen'].parts['plate'].elements[10647:10650]+\
    mdb.models['eigen'].parts['plate'].elements[10797:10800]+\
    mdb.models['eigen'].parts['plate'].elements[10947:10950]+\
    mdb.models['eigen'].parts['plate'].elements[11097:11100]+\
    mdb.models['eigen'].parts['plate'].elements[11247:11250]+\
    mdb.models['eigen'].parts['plate'].elements[11397:11400]+\
    mdb.models['eigen'].parts['plate'].elements[11547:11550]+\
    mdb.models['eigen'].parts['plate'].elements[11697:11700]+\
    mdb.models['eigen'].parts['plate'].elements[11847:11850]+\
    mdb.models['eigen'].parts['plate'].elements[11997:12000]+\
    mdb.models['eigen'].parts['plate'].elements[12147:12150]+\
    mdb.models['eigen'].parts['plate'].elements[12297:12300]+\
    mdb.models['eigen'].parts['plate'].elements[12447:12450]+\
    mdb.models['eigen'].parts['plate'].elements[12597:12600]+\
    mdb.models['eigen'].parts['plate'].elements[12747:12750]+\
    mdb.models['eigen'].parts['plate'].elements[12897:12900]+\
    mdb.models['eigen'].parts['plate'].elements[13047:13050]+\
    mdb.models['eigen'].parts['plate'].elements[13197:13200]+\
    mdb.models['eigen'].parts['plate'].elements[13347:13350]+\
    mdb.models['eigen'].parts['plate'].elements[13497:13503]+\
    mdb.models['eigen'].parts['plate'].elements[13650:13653]+\
    mdb.models['eigen'].parts['plate'].elements[13800:13803]+\
    mdb.models['eigen'].parts['plate'].elements[13950:13953]+\
    mdb.models['eigen'].parts['plate'].elements[14100:14103]+\
    mdb.models['eigen'].parts['plate'].elements[14250:14253]+\
    mdb.models['eigen'].parts['plate'].elements[14400:14403]+\
    mdb.models['eigen'].parts['plate'].elements[14550:14553]+\
    mdb.models['eigen'].parts['plate'].elements[14700:14703]+\
    mdb.models['eigen'].parts['plate'].elements[14850:14853]+\
    mdb.models['eigen'].parts['plate'].elements[15000:15003]+\
    mdb.models['eigen'].parts['plate'].elements[15150:15153]+\
    mdb.models['eigen'].parts['plate'].elements[15300:15303]+\
    mdb.models['eigen'].parts['plate'].elements[15450:15453]+\
    mdb.models['eigen'].parts['plate'].elements[15600:15603]+\
    mdb.models['eigen'].parts['plate'].elements[15750:15753]+\
    mdb.models['eigen'].parts['plate'].elements[15900:15903]+\
    mdb.models['eigen'].parts['plate'].elements[16050:16053]+\
    mdb.models['eigen'].parts['plate'].elements[16200:16203]+\
    mdb.models['eigen'].parts['plate'].elements[16350:16353]+\
    mdb.models['eigen'].parts['plate'].elements[16500:16503]+\
    mdb.models['eigen'].parts['plate'].elements[16650:16653]+\
    mdb.models['eigen'].parts['plate'].elements[16800:16803]+\
    mdb.models['eigen'].parts['plate'].elements[16950:16953]+\
    mdb.models['eigen'].parts['plate'].elements[17100:17103]+\
    mdb.models['eigen'].parts['plate'].elements[17250:17253]+\
    mdb.models['eigen'].parts['plate'].elements[17400:17403]+\
    mdb.models['eigen'].parts['plate'].elements[17550:17553]+\
    mdb.models['eigen'].parts['plate'].elements[17700:17703]+\
    mdb.models['eigen'].parts['plate'].elements[17850:17853]+\
    mdb.models['eigen'].parts['plate'].elements[18147:18150]+\
    mdb.models['eigen'].parts['plate'].elements[18297:18300]+\
    mdb.models['eigen'].parts['plate'].elements[18447:18450]+\
    mdb.models['eigen'].parts['plate'].elements[18597:18600]+\
    mdb.models['eigen'].parts['plate'].elements[18747:18750]+\
    mdb.models['eigen'].parts['plate'].elements[18897:18900]+\
    mdb.models['eigen'].parts['plate'].elements[19047:19050]+\
    mdb.models['eigen'].parts['plate'].elements[19197:19200]+\
    mdb.models['eigen'].parts['plate'].elements[19347:19350]+\
    mdb.models['eigen'].parts['plate'].elements[19497:19500]+\
    mdb.models['eigen'].parts['plate'].elements[19647:19650]+\
    mdb.models['eigen'].parts['plate'].elements[19797:19800]+\
    mdb.models['eigen'].parts['plate'].elements[19947:19950]+\
    mdb.models['eigen'].parts['plate'].elements[20097:20100]+\
    mdb.models['eigen'].parts['plate'].elements[20247:20250]+\
    mdb.models['eigen'].parts['plate'].elements[20397:20400]+\
    mdb.models['eigen'].parts['plate'].elements[20547:20550]+\
    mdb.models['eigen'].parts['plate'].elements[20697:20700]+\
    mdb.models['eigen'].parts['plate'].elements[20847:20850]+\
    mdb.models['eigen'].parts['plate'].elements[20997:21000]+\
    mdb.models['eigen'].parts['plate'].elements[21147:21150]+\
    mdb.models['eigen'].parts['plate'].elements[21297:21300]+\
    mdb.models['eigen'].parts['plate'].elements[21447:21450]+\
    mdb.models['eigen'].parts['plate'].elements[21597:21600]+\
    mdb.models['eigen'].parts['plate'].elements[21747:21750]+\
    mdb.models['eigen'].parts['plate'].elements[21897:21900]+\
    mdb.models['eigen'].parts['plate'].elements[22047:22050]+\
    mdb.models['eigen'].parts['plate'].elements[22197:22200]+\
    mdb.models['eigen'].parts['plate'].elements[22347:22350]+\
    mdb.models['eigen'].parts['plate'].elements[22497:22500]+\
    mdb.models['eigen'].parts['plate'].elements[22503:22506]+\
    mdb.models['eigen'].parts['plate'].elements[22510:22512]+\
    mdb.models['eigen'].parts['plate'].elements[22517:22518]+\
    mdb.models['eigen'].parts['plate'].elements[24003:24006]+\
    mdb.models['eigen'].parts['plate'].elements[24010:24012]+\
    mdb.models['eigen'].parts['plate'].elements[24017:24018]+\
    mdb.models['eigen'].parts['plate'].elements[25503:25506]+\
    mdb.models['eigen'].parts['plate'].elements[25510:25512]+\
    mdb.models['eigen'].parts['plate'].elements[25517:25518]+\
    mdb.models['eigen'].parts['plate'].elements[27003:27006]+\
    mdb.models['eigen'].parts['plate'].elements[27010:27012]+\
    mdb.models['eigen'].parts['plate'].elements[27017:27018], name=
    'right_thickness_region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['right_thickness_region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].rootAssembly.Instance(dependent=ON, name='panel', part=
    mdb.models['eigen'].parts['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 0, 1), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 1, 0), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.translate(instanceList=['panel'], vector=(
    -1.5, 0.0, 0.0))
mdb.models['eigen'].rootAssembly.Set(name='Web0-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[6:7])
mdb.models['eigen'].rootAssembly.Set(name='Web0-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[7:8]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[12:14]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[1220:1230])
mdb.models['eigen'].Equation(nam='Web0-2', terms=((1.0, 'Web0-Follower', 2), (
    -1.0, 'Web0-Main', 2)))
#* TypeError: keyword error on nam
mdb.Model(name='eigen')
mdb.models['eigen'].ConstrainedSketch(name='geometry', sheetSize=4.0)
mdb.models['eigen'].sketches['geometry'].Line(point1=(-1.5, 0.0), point2=(1.5, 
    0.0))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9, 0.0), point2=(-0.9, 
    0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.9500000000000001, 
    0.125), point2=(-0.85, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.9, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.30000000000000004, 
    0.0), point2=(-0.30000000000000004, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(-0.35000000000000003, 
    0.125), point2=(-0.25000000000000006, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((-0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.29999999999999993, 0.0)
    , point2=(0.29999999999999993, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.24999999999999994, 
    0.125), point2=(0.3499999999999999, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.3, 0.125), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8999999999999998, 0.0), 
    point2=(0.8999999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].VerticalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.0625), ))
mdb.models['eigen'].sketches['geometry'].Line(point1=(0.8499999999999998, 
    0.125), point2=(0.9499999999999998, 0.125))
mdb.models['eigen'].sketches['geometry'].HorizontalConstraint(entity=
    mdb.models['eigen'].sketches['geometry'].geometry.findAt((0.9, 0.125), ))
mdb.models['eigen'].Part(dimensionality=THREE_D, name='plate', type=
    DEFORMABLE_BODY)
mdb.models['eigen'].parts['plate'].BaseShellExtrude(depth=3.0, sketch=
    mdb.models['eigen'].sketches['geometry'])
del mdb.models['eigen'].sketches['geometry']
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ), name='PlateFace')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 2.0), (
    0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.283333, 
    0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), 
    ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ), name='FlangeFaces')
mdb.models['eigen'].parts['plate'].Set(faces=
    mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ), name=
    'WebFaces')
mdb.models['eigen'].Material(name='steel')
mdb.models['eigen'].materials['steel'].Elastic(table=((200000000000.0, 0.3), ))
mdb.models['eigen'].materials['steel'].Density(table=((7850, 296.15), ))
mdb.models['eigen'].materials['steel'].Plastic(table=[(355000000.0, 0.0), (
    355000000.0, 0.006), (356712753.254401, 0.016), (360895174.809829, 0.026), 
    (368868911.433451, 0.046), (376380203.187135, 0.066), (383487562.389997, 
    0.086)])
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.01', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.01, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.0078', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.0078, thicknessField=''
    , thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='t-0.004', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.004, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='local-thickness', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=0.039, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['eigen'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['eigen'].BuckleStep(maxIterations=500, name='Buckle-Step', numEigen=
    5, previous='Initial')
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3375, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9125, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3125, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.2625, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.85, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.35, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.8875, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.8625, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.2875, 0.125, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.25, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3375, 0.125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.95, 0.125, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3125, 0.125, 0.0), )], 
    size=0.025)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.03125, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.09375, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.125, 2.25), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.03125, 0.0), )], 
    size=0.0208)
mdb.models['eigen'].parts['plate'].seedEdgeBySize(constraint=FINER, edges=
    [mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.05, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.05, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-1.35, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.5, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.15, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.45, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.15, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((1.35, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.9, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.3, 0.0, 0.75), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.45, 0.0, 3.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((-0.75, 0.0, 0.0), ), 
    mdb.models['eigen'].parts['plate'].edges.findAt((0.75, 0.0, 3.0), )], size=
    0.02)
mdb.models['eigen'].parts['plate'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), technique=STRUCTURED)
mdb.models['eigen'].parts['plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=STANDARD), ), regions=(
    mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (0.0, 
    -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), (0.0, 
    -1.0, 0.0)), ((-0.9, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.283333, 0.125, 2.0), (0.0, -1.0, 
    0.0)), ((0.316667, 0.125, 1.0), (0.0, -1.0, 0.0)), ((0.9, 0.083333, 2.0), (
    1.0, 0.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 
    0.125, 1.0), (0.0, -1.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), (
    (-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((-0.283333, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ), ))
mdb.models['eigen'].parts['plate'].generateMesh()
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((1.1, 0.0, 1.0), (
    0.0, -1.0, 0.0)), ((0.7, 0.0, 2.0), (0.0, -1.0, 0.0)), ((-1.1, 0.0, 2.0), (
    0.0, -1.0, 0.0)), ((-0.1, 0.0, 1.0), (0.0, -1.0, 0.0)), ((-0.5, 0.0, 2.0), 
    (0.0, -1.0, 0.0)), )), sectionName='t-0.01', thicknessAssignment=
    FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.9, 0.083333, 
    2.0), (1.0, 0.0, 0.0)), ((0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), ((0.9, 
    0.083333, 2.0), (1.0, 0.0, 0.0)), ((-0.3, 0.083333, 2.0), (1.0, 0.0, 0.0)), 
    )), sectionName='t-0.0078', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=Region(
    faces=mdb.models['eigen'].parts['plate'].faces.findAt(((-0.916667, 0.125, 
    2.0), (0.0, -1.0, 0.0)), ((-0.883333, 0.125, 1.0), (0.0, -1.0, 0.0)), ((
    0.283333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.316667, 0.125, 1.0), (0.0, 
    -1.0, 0.0)), ((0.883333, 0.125, 2.0), (0.0, -1.0, 0.0)), ((0.916667, 0.125, 
    1.0), (0.0, -1.0, 0.0)), ((-0.316667, 0.125, 2.0), (0.0, -1.0, 0.0)), ((
    -0.283333, 0.125, 1.0), (0.0, -1.0, 0.0)), )), sectionName='t-0.004', 
    thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].PartFromMesh(copySets=False, name='panel')
mdb.models['eigen'].rootAssembly.regenerate()
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[2], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[5], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[6], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[9], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[11], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[190], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[570], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[571], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[572], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[573], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[574], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[575], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[576], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[577], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[578], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[579], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[580], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[581], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[582], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[583], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[584], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[585], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[586], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[587], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[588], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[589], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[590], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[591], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[592], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[593], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[594], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[595], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[596], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[597], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[598], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[926], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[927], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[928], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[929], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[930], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[931], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[932], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[933], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[934], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[935], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[936], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[937], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[938], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[939], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[940], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[941], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[942], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[943], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[944], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[945], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[946], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[947], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[948], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[949], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[950], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[951], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[952], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[953], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[954], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1104], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1105], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1106], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1107], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1108], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1109], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1110], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1111], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1112], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1113], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1114], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1115], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1116], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1117], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((2.22044604925031e-16, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1118], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1119], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1120], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1121], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1122], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1123], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1124], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1125], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1126], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1127], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1128], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1129], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1130], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1131], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1132], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1191], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1192], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1193], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1194], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1195], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1196], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1197], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1198], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1199], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1200], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1201], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1202], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1203], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1204], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1205], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1206], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1207], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1208], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1209], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1210], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1211], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1212], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1213], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1214], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1215], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1216], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1217], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1218], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200526, 0.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1219], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[0], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[3], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[4], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.899999976158142, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[7], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[8], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.300000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[10], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[363], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[364], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[365], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[366], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[367], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[368], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[369], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[370], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[371], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[372], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[373], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[374], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[375], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[376], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[377], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[378], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[379], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[380], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[381], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[382], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[383], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[384], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[385], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[386], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[387], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[388], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[389], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[390], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[391], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[392], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[393], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[394], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[395], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[396], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[397], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[398], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[399], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[400], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[401], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[402], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[403], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[404], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[405], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[406], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[407], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[408], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[409], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[410], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[411], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[412], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[413], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[414], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[415], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[416], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[417], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[418], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[419], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[420], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.920000016689301, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[748], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.939999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[749], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.959999978542328, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[750], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.980000019073486, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[751], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.0, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[752], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.01999998092651, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[753], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.03999996185303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[754], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.05999994277954, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[755], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.08000004291534, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[756], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.10000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[757], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.12000000476837, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[758], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.13999998569489, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[759], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.1599999666214, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[760], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.17999994754791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[761], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.20000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[762], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.22000002861023, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[763], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.24000000953674, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[764], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.25999999046326, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[765], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.27999997138977, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[766], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.29999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[767], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.32000005245209, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[768], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.3400000333786, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[769], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.36000001430511, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[770], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.37999999523163, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[771], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.39999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[772], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.41999995708466, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[773], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.44000005722046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[774], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.46000003814697, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[775], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-1.48000001907349, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[776], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1133], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1134], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1135], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1136], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1137], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1138], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1139], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1140], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1141], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1142], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1143], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1144], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1145], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1146], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((
    -4.44089209850063e-16, 0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1147], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0199999995529652, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1148], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0399999991059303, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1149], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0599999986588955, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1150], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.0799999982118607, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1151], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.100000001490116, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1152], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.119999997317791, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1153], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.140000000596046, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1154], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.159999996423721, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1155], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.180000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1156], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.200000002980232, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1157], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.219999998807907, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1158], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.239999994635582, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1159], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.259999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1160], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.280000001192093, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1161], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.319999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1162], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.340000003576279, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1163], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.360000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1164], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.379999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1165], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.400000005960464, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1166], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.419999986886978, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1167], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.439999997615814, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1168], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.46000000834465, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1169], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.479999989271164, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1170], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.5, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1171], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.519999980926514, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1172], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.540000021457672, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1173], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.560000002384186, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1174], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.579999983310699, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1175], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.600000023841858, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1176], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.620000004768372, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1177], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.639999985694885, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1178], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.660000026226044, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1179], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.680000007152557, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1180], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.699999988079071, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1181], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.720000028610229, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1182], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.740000009536743, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1183], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.759999990463257, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1184], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.779999971389771, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1185], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.800000011920929, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1186], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.819999992847443, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1187], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.839999973773956, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1188], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.860000014305115, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1189], ))
mdb.models['eigen'].parts['plate'].editNode(coordinates=((-0.879999995231628, 
    0.010190490227200342, 3.0), ), nodes=(
    mdb.models['eigen'].parts['plate'].nodes[1190], ))
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[147:150]+\
    mdb.models['eigen'].parts['plate'].elements[297:300]+\
    mdb.models['eigen'].parts['plate'].elements[447:450]+\
    mdb.models['eigen'].parts['plate'].elements[597:600]+\
    mdb.models['eigen'].parts['plate'].elements[747:750]+\
    mdb.models['eigen'].parts['plate'].elements[897:900]+\
    mdb.models['eigen'].parts['plate'].elements[1047:1050]+\
    mdb.models['eigen'].parts['plate'].elements[1197:1200]+\
    mdb.models['eigen'].parts['plate'].elements[1347:1350]+\
    mdb.models['eigen'].parts['plate'].elements[1497:1500]+\
    mdb.models['eigen'].parts['plate'].elements[1647:1650]+\
    mdb.models['eigen'].parts['plate'].elements[1797:1800]+\
    mdb.models['eigen'].parts['plate'].elements[1947:1950]+\
    mdb.models['eigen'].parts['plate'].elements[2097:2100]+\
    mdb.models['eigen'].parts['plate'].elements[2247:2250]+\
    mdb.models['eigen'].parts['plate'].elements[2397:2400]+\
    mdb.models['eigen'].parts['plate'].elements[2547:2550]+\
    mdb.models['eigen'].parts['plate'].elements[2697:2700]+\
    mdb.models['eigen'].parts['plate'].elements[2847:2850]+\
    mdb.models['eigen'].parts['plate'].elements[2997:3000]+\
    mdb.models['eigen'].parts['plate'].elements[3147:3150]+\
    mdb.models['eigen'].parts['plate'].elements[3297:3300]+\
    mdb.models['eigen'].parts['plate'].elements[3447:3450]+\
    mdb.models['eigen'].parts['plate'].elements[3597:3600]+\
    mdb.models['eigen'].parts['plate'].elements[3747:3750]+\
    mdb.models['eigen'].parts['plate'].elements[3897:3900]+\
    mdb.models['eigen'].parts['plate'].elements[4047:4050]+\
    mdb.models['eigen'].parts['plate'].elements[4197:4200]+\
    mdb.models['eigen'].parts['plate'].elements[4347:4350]+\
    mdb.models['eigen'].parts['plate'].elements[4497:4503]+\
    mdb.models['eigen'].parts['plate'].elements[4650:4653]+\
    mdb.models['eigen'].parts['plate'].elements[4800:4803]+\
    mdb.models['eigen'].parts['plate'].elements[4950:4953]+\
    mdb.models['eigen'].parts['plate'].elements[5100:5103]+\
    mdb.models['eigen'].parts['plate'].elements[5250:5253]+\
    mdb.models['eigen'].parts['plate'].elements[5400:5403]+\
    mdb.models['eigen'].parts['plate'].elements[5550:5553]+\
    mdb.models['eigen'].parts['plate'].elements[5700:5703]+\
    mdb.models['eigen'].parts['plate'].elements[5850:5853]+\
    mdb.models['eigen'].parts['plate'].elements[6000:6003]+\
    mdb.models['eigen'].parts['plate'].elements[6150:6153]+\
    mdb.models['eigen'].parts['plate'].elements[6300:6303]+\
    mdb.models['eigen'].parts['plate'].elements[6450:6453]+\
    mdb.models['eigen'].parts['plate'].elements[6600:6603]+\
    mdb.models['eigen'].parts['plate'].elements[6750:6753]+\
    mdb.models['eigen'].parts['plate'].elements[6900:6903]+\
    mdb.models['eigen'].parts['plate'].elements[7050:7053]+\
    mdb.models['eigen'].parts['plate'].elements[7200:7203]+\
    mdb.models['eigen'].parts['plate'].elements[7350:7353]+\
    mdb.models['eigen'].parts['plate'].elements[7500:7503]+\
    mdb.models['eigen'].parts['plate'].elements[7650:7653]+\
    mdb.models['eigen'].parts['plate'].elements[7800:7803]+\
    mdb.models['eigen'].parts['plate'].elements[7950:7953]+\
    mdb.models['eigen'].parts['plate'].elements[8100:8103]+\
    mdb.models['eigen'].parts['plate'].elements[8250:8253]+\
    mdb.models['eigen'].parts['plate'].elements[8400:8403]+\
    mdb.models['eigen'].parts['plate'].elements[8550:8553]+\
    mdb.models['eigen'].parts['plate'].elements[8700:8703]+\
    mdb.models['eigen'].parts['plate'].elements[8850:8853]+\
    mdb.models['eigen'].parts['plate'].elements[9000:9003]+\
    mdb.models['eigen'].parts['plate'].elements[9150:9153]+\
    mdb.models['eigen'].parts['plate'].elements[9300:9303]+\
    mdb.models['eigen'].parts['plate'].elements[9450:9453]+\
    mdb.models['eigen'].parts['plate'].elements[9600:9603]+\
    mdb.models['eigen'].parts['plate'].elements[9750:9753]+\
    mdb.models['eigen'].parts['plate'].elements[9900:9903]+\
    mdb.models['eigen'].parts['plate'].elements[10050:10053]+\
    mdb.models['eigen'].parts['plate'].elements[10200:10203]+\
    mdb.models['eigen'].parts['plate'].elements[10350:10353]+\
    mdb.models['eigen'].parts['plate'].elements[10500:10503]+\
    mdb.models['eigen'].parts['plate'].elements[10650:10653]+\
    mdb.models['eigen'].parts['plate'].elements[10800:10803]+\
    mdb.models['eigen'].parts['plate'].elements[10950:10953]+\
    mdb.models['eigen'].parts['plate'].elements[11100:11103]+\
    mdb.models['eigen'].parts['plate'].elements[11250:11253]+\
    mdb.models['eigen'].parts['plate'].elements[11400:11403]+\
    mdb.models['eigen'].parts['plate'].elements[11550:11553]+\
    mdb.models['eigen'].parts['plate'].elements[11700:11703]+\
    mdb.models['eigen'].parts['plate'].elements[11850:11853]+\
    mdb.models['eigen'].parts['plate'].elements[12000:12003]+\
    mdb.models['eigen'].parts['plate'].elements[12150:12153]+\
    mdb.models['eigen'].parts['plate'].elements[12300:12303]+\
    mdb.models['eigen'].parts['plate'].elements[12450:12453]+\
    mdb.models['eigen'].parts['plate'].elements[12600:12603]+\
    mdb.models['eigen'].parts['plate'].elements[12750:12753]+\
    mdb.models['eigen'].parts['plate'].elements[12900:12903]+\
    mdb.models['eigen'].parts['plate'].elements[13050:13053]+\
    mdb.models['eigen'].parts['plate'].elements[13200:13203]+\
    mdb.models['eigen'].parts['plate'].elements[13350:13353]+\
    mdb.models['eigen'].parts['plate'].elements[13647:13650]+\
    mdb.models['eigen'].parts['plate'].elements[13797:13800]+\
    mdb.models['eigen'].parts['plate'].elements[13947:13950]+\
    mdb.models['eigen'].parts['plate'].elements[14097:14100]+\
    mdb.models['eigen'].parts['plate'].elements[14247:14250]+\
    mdb.models['eigen'].parts['plate'].elements[14397:14400]+\
    mdb.models['eigen'].parts['plate'].elements[14547:14550]+\
    mdb.models['eigen'].parts['plate'].elements[14697:14700]+\
    mdb.models['eigen'].parts['plate'].elements[14847:14850]+\
    mdb.models['eigen'].parts['plate'].elements[14997:15000]+\
    mdb.models['eigen'].parts['plate'].elements[15147:15150]+\
    mdb.models['eigen'].parts['plate'].elements[15297:15300]+\
    mdb.models['eigen'].parts['plate'].elements[15447:15450]+\
    mdb.models['eigen'].parts['plate'].elements[15597:15600]+\
    mdb.models['eigen'].parts['plate'].elements[15747:15750]+\
    mdb.models['eigen'].parts['plate'].elements[15897:15900]+\
    mdb.models['eigen'].parts['plate'].elements[16047:16050]+\
    mdb.models['eigen'].parts['plate'].elements[16197:16200]+\
    mdb.models['eigen'].parts['plate'].elements[16347:16350]+\
    mdb.models['eigen'].parts['plate'].elements[16497:16500]+\
    mdb.models['eigen'].parts['plate'].elements[16647:16650]+\
    mdb.models['eigen'].parts['plate'].elements[16797:16800]+\
    mdb.models['eigen'].parts['plate'].elements[16947:16950]+\
    mdb.models['eigen'].parts['plate'].elements[17097:17100]+\
    mdb.models['eigen'].parts['plate'].elements[17247:17250]+\
    mdb.models['eigen'].parts['plate'].elements[17397:17400]+\
    mdb.models['eigen'].parts['plate'].elements[17547:17550]+\
    mdb.models['eigen'].parts['plate'].elements[17697:17700]+\
    mdb.models['eigen'].parts['plate'].elements[17847:17850]+\
    mdb.models['eigen'].parts['plate'].elements[17997:18003]+\
    mdb.models['eigen'].parts['plate'].elements[18150:18153]+\
    mdb.models['eigen'].parts['plate'].elements[18300:18303]+\
    mdb.models['eigen'].parts['plate'].elements[18450:18453]+\
    mdb.models['eigen'].parts['plate'].elements[18600:18603]+\
    mdb.models['eigen'].parts['plate'].elements[18750:18753]+\
    mdb.models['eigen'].parts['plate'].elements[18900:18903]+\
    mdb.models['eigen'].parts['plate'].elements[19050:19053]+\
    mdb.models['eigen'].parts['plate'].elements[19200:19203]+\
    mdb.models['eigen'].parts['plate'].elements[19350:19353]+\
    mdb.models['eigen'].parts['plate'].elements[19500:19503]+\
    mdb.models['eigen'].parts['plate'].elements[19650:19653]+\
    mdb.models['eigen'].parts['plate'].elements[19800:19803]+\
    mdb.models['eigen'].parts['plate'].elements[19950:19953]+\
    mdb.models['eigen'].parts['plate'].elements[20100:20103]+\
    mdb.models['eigen'].parts['plate'].elements[20250:20253]+\
    mdb.models['eigen'].parts['plate'].elements[20400:20403]+\
    mdb.models['eigen'].parts['plate'].elements[20550:20553]+\
    mdb.models['eigen'].parts['plate'].elements[20700:20703]+\
    mdb.models['eigen'].parts['plate'].elements[20850:20853]+\
    mdb.models['eigen'].parts['plate'].elements[21000:21003]+\
    mdb.models['eigen'].parts['plate'].elements[21150:21153]+\
    mdb.models['eigen'].parts['plate'].elements[21300:21303]+\
    mdb.models['eigen'].parts['plate'].elements[21450:21453]+\
    mdb.models['eigen'].parts['plate'].elements[21600:21603]+\
    mdb.models['eigen'].parts['plate'].elements[21750:21753]+\
    mdb.models['eigen'].parts['plate'].elements[21900:21903]+\
    mdb.models['eigen'].parts['plate'].elements[22050:22053]+\
    mdb.models['eigen'].parts['plate'].elements[22200:22203]+\
    mdb.models['eigen'].parts['plate'].elements[22350:22353]+\
    mdb.models['eigen'].parts['plate'].elements[23387:23388]+\
    mdb.models['eigen'].parts['plate'].elements[23392:23394]+\
    mdb.models['eigen'].parts['plate'].elements[23397:23400]+\
    mdb.models['eigen'].parts['plate'].elements[24887:24888]+\
    mdb.models['eigen'].parts['plate'].elements[24892:24894]+\
    mdb.models['eigen'].parts['plate'].elements[24897:24900]+\
    mdb.models['eigen'].parts['plate'].elements[26387:26388]+\
    mdb.models['eigen'].parts['plate'].elements[26392:26394]+\
    mdb.models['eigen'].parts['plate'].elements[26397:26400]+\
    mdb.models['eigen'].parts['plate'].elements[27887:27888]+\
    mdb.models['eigen'].parts['plate'].elements[27892:27894]+\
    mdb.models['eigen'].parts['plate'].elements[27897:27900], name=
    'left-thickness-region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['left-thickness-region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].parts['plate'].Set(elements=
    mdb.models['eigen'].parts['plate'].elements[0:3]+\
    mdb.models['eigen'].parts['plate'].elements[150:153]+\
    mdb.models['eigen'].parts['plate'].elements[300:303]+\
    mdb.models['eigen'].parts['plate'].elements[450:453]+\
    mdb.models['eigen'].parts['plate'].elements[600:603]+\
    mdb.models['eigen'].parts['plate'].elements[750:753]+\
    mdb.models['eigen'].parts['plate'].elements[900:903]+\
    mdb.models['eigen'].parts['plate'].elements[1050:1053]+\
    mdb.models['eigen'].parts['plate'].elements[1200:1203]+\
    mdb.models['eigen'].parts['plate'].elements[1350:1353]+\
    mdb.models['eigen'].parts['plate'].elements[1500:1503]+\
    mdb.models['eigen'].parts['plate'].elements[1650:1653]+\
    mdb.models['eigen'].parts['plate'].elements[1800:1803]+\
    mdb.models['eigen'].parts['plate'].elements[1950:1953]+\
    mdb.models['eigen'].parts['plate'].elements[2100:2103]+\
    mdb.models['eigen'].parts['plate'].elements[2250:2253]+\
    mdb.models['eigen'].parts['plate'].elements[2400:2403]+\
    mdb.models['eigen'].parts['plate'].elements[2550:2553]+\
    mdb.models['eigen'].parts['plate'].elements[2700:2703]+\
    mdb.models['eigen'].parts['plate'].elements[2850:2853]+\
    mdb.models['eigen'].parts['plate'].elements[3000:3003]+\
    mdb.models['eigen'].parts['plate'].elements[3150:3153]+\
    mdb.models['eigen'].parts['plate'].elements[3300:3303]+\
    mdb.models['eigen'].parts['plate'].elements[3450:3453]+\
    mdb.models['eigen'].parts['plate'].elements[3600:3603]+\
    mdb.models['eigen'].parts['plate'].elements[3750:3753]+\
    mdb.models['eigen'].parts['plate'].elements[3900:3903]+\
    mdb.models['eigen'].parts['plate'].elements[4050:4053]+\
    mdb.models['eigen'].parts['plate'].elements[4200:4203]+\
    mdb.models['eigen'].parts['plate'].elements[4350:4353]+\
    mdb.models['eigen'].parts['plate'].elements[4647:4650]+\
    mdb.models['eigen'].parts['plate'].elements[4797:4800]+\
    mdb.models['eigen'].parts['plate'].elements[4947:4950]+\
    mdb.models['eigen'].parts['plate'].elements[5097:5100]+\
    mdb.models['eigen'].parts['plate'].elements[5247:5250]+\
    mdb.models['eigen'].parts['plate'].elements[5397:5400]+\
    mdb.models['eigen'].parts['plate'].elements[5547:5550]+\
    mdb.models['eigen'].parts['plate'].elements[5697:5700]+\
    mdb.models['eigen'].parts['plate'].elements[5847:5850]+\
    mdb.models['eigen'].parts['plate'].elements[5997:6000]+\
    mdb.models['eigen'].parts['plate'].elements[6147:6150]+\
    mdb.models['eigen'].parts['plate'].elements[6297:6300]+\
    mdb.models['eigen'].parts['plate'].elements[6447:6450]+\
    mdb.models['eigen'].parts['plate'].elements[6597:6600]+\
    mdb.models['eigen'].parts['plate'].elements[6747:6750]+\
    mdb.models['eigen'].parts['plate'].elements[6897:6900]+\
    mdb.models['eigen'].parts['plate'].elements[7047:7050]+\
    mdb.models['eigen'].parts['plate'].elements[7197:7200]+\
    mdb.models['eigen'].parts['plate'].elements[7347:7350]+\
    mdb.models['eigen'].parts['plate'].elements[7497:7500]+\
    mdb.models['eigen'].parts['plate'].elements[7647:7650]+\
    mdb.models['eigen'].parts['plate'].elements[7797:7800]+\
    mdb.models['eigen'].parts['plate'].elements[7947:7950]+\
    mdb.models['eigen'].parts['plate'].elements[8097:8100]+\
    mdb.models['eigen'].parts['plate'].elements[8247:8250]+\
    mdb.models['eigen'].parts['plate'].elements[8397:8400]+\
    mdb.models['eigen'].parts['plate'].elements[8547:8550]+\
    mdb.models['eigen'].parts['plate'].elements[8697:8700]+\
    mdb.models['eigen'].parts['plate'].elements[8847:8850]+\
    mdb.models['eigen'].parts['plate'].elements[8997:9000]+\
    mdb.models['eigen'].parts['plate'].elements[9147:9150]+\
    mdb.models['eigen'].parts['plate'].elements[9297:9300]+\
    mdb.models['eigen'].parts['plate'].elements[9447:9450]+\
    mdb.models['eigen'].parts['plate'].elements[9597:9600]+\
    mdb.models['eigen'].parts['plate'].elements[9747:9750]+\
    mdb.models['eigen'].parts['plate'].elements[9897:9900]+\
    mdb.models['eigen'].parts['plate'].elements[10047:10050]+\
    mdb.models['eigen'].parts['plate'].elements[10197:10200]+\
    mdb.models['eigen'].parts['plate'].elements[10347:10350]+\
    mdb.models['eigen'].parts['plate'].elements[10497:10500]+\
    mdb.models['eigen'].parts['plate'].elements[10647:10650]+\
    mdb.models['eigen'].parts['plate'].elements[10797:10800]+\
    mdb.models['eigen'].parts['plate'].elements[10947:10950]+\
    mdb.models['eigen'].parts['plate'].elements[11097:11100]+\
    mdb.models['eigen'].parts['plate'].elements[11247:11250]+\
    mdb.models['eigen'].parts['plate'].elements[11397:11400]+\
    mdb.models['eigen'].parts['plate'].elements[11547:11550]+\
    mdb.models['eigen'].parts['plate'].elements[11697:11700]+\
    mdb.models['eigen'].parts['plate'].elements[11847:11850]+\
    mdb.models['eigen'].parts['plate'].elements[11997:12000]+\
    mdb.models['eigen'].parts['plate'].elements[12147:12150]+\
    mdb.models['eigen'].parts['plate'].elements[12297:12300]+\
    mdb.models['eigen'].parts['plate'].elements[12447:12450]+\
    mdb.models['eigen'].parts['plate'].elements[12597:12600]+\
    mdb.models['eigen'].parts['plate'].elements[12747:12750]+\
    mdb.models['eigen'].parts['plate'].elements[12897:12900]+\
    mdb.models['eigen'].parts['plate'].elements[13047:13050]+\
    mdb.models['eigen'].parts['plate'].elements[13197:13200]+\
    mdb.models['eigen'].parts['plate'].elements[13347:13350]+\
    mdb.models['eigen'].parts['plate'].elements[13497:13503]+\
    mdb.models['eigen'].parts['plate'].elements[13650:13653]+\
    mdb.models['eigen'].parts['plate'].elements[13800:13803]+\
    mdb.models['eigen'].parts['plate'].elements[13950:13953]+\
    mdb.models['eigen'].parts['plate'].elements[14100:14103]+\
    mdb.models['eigen'].parts['plate'].elements[14250:14253]+\
    mdb.models['eigen'].parts['plate'].elements[14400:14403]+\
    mdb.models['eigen'].parts['plate'].elements[14550:14553]+\
    mdb.models['eigen'].parts['plate'].elements[14700:14703]+\
    mdb.models['eigen'].parts['plate'].elements[14850:14853]+\
    mdb.models['eigen'].parts['plate'].elements[15000:15003]+\
    mdb.models['eigen'].parts['plate'].elements[15150:15153]+\
    mdb.models['eigen'].parts['plate'].elements[15300:15303]+\
    mdb.models['eigen'].parts['plate'].elements[15450:15453]+\
    mdb.models['eigen'].parts['plate'].elements[15600:15603]+\
    mdb.models['eigen'].parts['plate'].elements[15750:15753]+\
    mdb.models['eigen'].parts['plate'].elements[15900:15903]+\
    mdb.models['eigen'].parts['plate'].elements[16050:16053]+\
    mdb.models['eigen'].parts['plate'].elements[16200:16203]+\
    mdb.models['eigen'].parts['plate'].elements[16350:16353]+\
    mdb.models['eigen'].parts['plate'].elements[16500:16503]+\
    mdb.models['eigen'].parts['plate'].elements[16650:16653]+\
    mdb.models['eigen'].parts['plate'].elements[16800:16803]+\
    mdb.models['eigen'].parts['plate'].elements[16950:16953]+\
    mdb.models['eigen'].parts['plate'].elements[17100:17103]+\
    mdb.models['eigen'].parts['plate'].elements[17250:17253]+\
    mdb.models['eigen'].parts['plate'].elements[17400:17403]+\
    mdb.models['eigen'].parts['plate'].elements[17550:17553]+\
    mdb.models['eigen'].parts['plate'].elements[17700:17703]+\
    mdb.models['eigen'].parts['plate'].elements[17850:17853]+\
    mdb.models['eigen'].parts['plate'].elements[18147:18150]+\
    mdb.models['eigen'].parts['plate'].elements[18297:18300]+\
    mdb.models['eigen'].parts['plate'].elements[18447:18450]+\
    mdb.models['eigen'].parts['plate'].elements[18597:18600]+\
    mdb.models['eigen'].parts['plate'].elements[18747:18750]+\
    mdb.models['eigen'].parts['plate'].elements[18897:18900]+\
    mdb.models['eigen'].parts['plate'].elements[19047:19050]+\
    mdb.models['eigen'].parts['plate'].elements[19197:19200]+\
    mdb.models['eigen'].parts['plate'].elements[19347:19350]+\
    mdb.models['eigen'].parts['plate'].elements[19497:19500]+\
    mdb.models['eigen'].parts['plate'].elements[19647:19650]+\
    mdb.models['eigen'].parts['plate'].elements[19797:19800]+\
    mdb.models['eigen'].parts['plate'].elements[19947:19950]+\
    mdb.models['eigen'].parts['plate'].elements[20097:20100]+\
    mdb.models['eigen'].parts['plate'].elements[20247:20250]+\
    mdb.models['eigen'].parts['plate'].elements[20397:20400]+\
    mdb.models['eigen'].parts['plate'].elements[20547:20550]+\
    mdb.models['eigen'].parts['plate'].elements[20697:20700]+\
    mdb.models['eigen'].parts['plate'].elements[20847:20850]+\
    mdb.models['eigen'].parts['plate'].elements[20997:21000]+\
    mdb.models['eigen'].parts['plate'].elements[21147:21150]+\
    mdb.models['eigen'].parts['plate'].elements[21297:21300]+\
    mdb.models['eigen'].parts['plate'].elements[21447:21450]+\
    mdb.models['eigen'].parts['plate'].elements[21597:21600]+\
    mdb.models['eigen'].parts['plate'].elements[21747:21750]+\
    mdb.models['eigen'].parts['plate'].elements[21897:21900]+\
    mdb.models['eigen'].parts['plate'].elements[22047:22050]+\
    mdb.models['eigen'].parts['plate'].elements[22197:22200]+\
    mdb.models['eigen'].parts['plate'].elements[22347:22350]+\
    mdb.models['eigen'].parts['plate'].elements[22497:22500]+\
    mdb.models['eigen'].parts['plate'].elements[22503:22506]+\
    mdb.models['eigen'].parts['plate'].elements[22510:22512]+\
    mdb.models['eigen'].parts['plate'].elements[22517:22518]+\
    mdb.models['eigen'].parts['plate'].elements[24003:24006]+\
    mdb.models['eigen'].parts['plate'].elements[24010:24012]+\
    mdb.models['eigen'].parts['plate'].elements[24017:24018]+\
    mdb.models['eigen'].parts['plate'].elements[25503:25506]+\
    mdb.models['eigen'].parts['plate'].elements[25510:25512]+\
    mdb.models['eigen'].parts['plate'].elements[25517:25518]+\
    mdb.models['eigen'].parts['plate'].elements[27003:27006]+\
    mdb.models['eigen'].parts['plate'].elements[27010:27012]+\
    mdb.models['eigen'].parts['plate'].elements[27017:27018], name=
    'right_thickness_region')
mdb.models['eigen'].parts['plate'].SectionAssignment(offset=0.0, offsetField=''
    , offsetType=MIDDLE_SURFACE, region=
    mdb.models['eigen'].parts['plate'].sets['right_thickness_region'], 
    sectionName='local-thickness', thicknessAssignment=FROM_SECTION)
mdb.models['eigen'].rootAssembly.Instance(dependent=ON, name='panel', part=
    mdb.models['eigen'].parts['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 0, 1), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.rotate(angle=90.0, axisDirection=(0, 1, 0), 
    axisPoint=(0, 0, 0), instanceList=['panel'])
mdb.models['eigen'].rootAssembly.translate(instanceList=['panel'], vector=(
    -1.5, 0.0, 0.0))
mdb.models['eigen'].rootAssembly.Set(name='Web0-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[6:7])
mdb.models['eigen'].rootAssembly.Set(name='Web0-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[7:8]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[12:14]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[1220:1230])
mdb.models['eigen'].Equation(name='Web0-2', terms=((1.0, 'Web0-Follower', 2), (
    -1.0, 'Web0-Main', 2)))
mdb.models['eigen'].rootAssembly.Set(name='Web1-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[10:11])
mdb.models['eigen'].rootAssembly.Set(name='Web1-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[11:12]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[30:32]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[2603:2613])
mdb.models['eigen'].Equation(name='Web1-2', terms=((1.0, 'Web1-Follower', 2), (
    -1.0, 'Web1-Main', 2)))
mdb.models['eigen'].rootAssembly.Set(name='Web2-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[4:5])
mdb.models['eigen'].rootAssembly.Set(name='Web2-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[5:6]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[18:20]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[1681:1691])
mdb.models['eigen'].Equation(name='Web2-2', terms=((1.0, 'Web2-Follower', 2), (
    -1.0, 'Web2-Main', 2)))
mdb.models['eigen'].rootAssembly.Set(name='Web3-Main', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[0:1])
mdb.models['eigen'].rootAssembly.Set(name='Web3-Follower', nodes=
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[1:2]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[24:26]+\
    mdb.models['eigen'].rootAssembly.instances['panel'].nodes[2142:2152])
mdb.models['eigen'].Equation(name='Web3-2', terms=((1.0, 'Web3-Follower', 2), (
    -1.0, 'Web3-Main', 2)))
